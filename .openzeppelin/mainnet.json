{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9438904ABC7d8944A6E2A89671fEf51C629af351",
    "txHash": "0x9183b517c69dc62e2f328f4b546d19ad2dd0e6b8ff4d0fa453befaf0c38df7f3"
  },
  "proxies": [
    {
      "address": "0x48a48c6694168093A3dEE02E9e8AC5a14169a652",
      "txHash": "0xb79cc07e803f9cb2b9062976fc4f9a157c36bf7a018b014c4a8b1cc9c7f618bc",
      "kind": "transparent"
    },
    {
      "address": "0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC",
      "txHash": "0x659ea86b3606da51579e74190a947b54f5441e1c7d9a3f8636cf560edf316cc8",
      "kind": "transparent"
    },
    {
      "address": "0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B",
      "txHash": "0x0229cc5fb1d15eb175d698432e8ac29308140d0e2121c1507d7ba1d9379942d4",
      "kind": "transparent"
    },
    {
      "address": "0x4473bc90118b18bE890Af42d793b5252c4dc382d",
      "txHash": "0xd5bbe30ae79aaa61f9dd6125b703007f8bd1f5b80f85de3e1a6522ec886a310c",
      "kind": "transparent"
    },
    {
      "address": "0x73A44027bDAF5D71296d2C73cfb13e561c76a916",
      "txHash": "0xd6ebf10e0282725896defcf39dabf90996435d197385d347e90a3e3b90e070f2",
      "kind": "transparent"
    },
    {
      "address": "0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba",
      "txHash": "0x0c9a660593050f756eef8671050301ffef8285737ef1e9db4c7b063fe2383447",
      "kind": "transparent"
    },
    {
      "address": "0x0cac674ebD77bBD899f6079932768f6d59Da089A",
      "txHash": "0x0eefe462e4df51cd28866b12bae36504b99591c3e896b653f39d8634693b7c08",
      "kind": "transparent"
    },
    {
      "address": "0xBc1707D16541108b7035E52e1DAeb27ca4B6B79F",
      "txHash": "0x56c8e72ed083404655493464342c1b7f98fa1f0aa21c32891347c47ea6dd4c00",
      "kind": "transparent"
    },
    {
      "address": "0x35168324dC1981aDDc3bC915788e200BeDF77865",
      "txHash": "0xcfaaa719a3ae2b2c84b139ac4ae1d23e710a5f18b4c451fdf0fd54bc587ec7a6",
      "kind": "transparent"
    },
    {
      "address": "0xDb7306Ddba67DD9d5aF08204E314F4DE6c29e20d",
      "txHash": "0xdae69952c20c1b277fa4ce38ecacba5ee05d43ae629b59b3e97ae3f54f6f0fa2",
      "kind": "transparent"
    },
    {
      "address": "0x271cE5dED4cCbD28833bddF8a8093517299920f0",
      "txHash": "0x43a4b3e3399881048108d182243298f100e2bd1f959814d317efeb9c031a6309",
      "kind": "transparent"
    },
    {
      "address": "0x4Ae60BC9A3eFc160AE2EbA70947a9b47Ad2b9094",
      "txHash": "0x15d655f0670d55d27297721d8aad5cc8de5050d4b07f9a32df1bdcf0eef6c6db",
      "kind": "transparent"
    },
    {
      "address": "0x3bCbA0AfD36C9B350f46c570f89ab70817D122CB",
      "txHash": "0x41bbe392b4a326ebb89a1051838c951c47e39b1ebb93ab5ef906c01b86c9aac2",
      "kind": "transparent"
    },
    {
      "address": "0x854b5b0f86Bd1B53492736245a728e0a384252A2",
      "txHash": "0x6b37be8d6a667e93eb9ac6fc552438c690c275bfde68230a4fb96a7d6be15815",
      "kind": "transparent"
    },
    {
      "address": "0x0198792f2849397908C092b6B57654e1a57a4CDC",
      "txHash": "0x5fde38f68030691be5cc827a785c01bd0219d4610918c544909859c46de3facf",
      "kind": "transparent"
    },
    {
      "address": "0x5DaD2eEF80a8cdFD930aB8f0353cA13Bd48c4346",
      "txHash": "0x2cb54d7e666cbdbf89b44ab3f36ef847414e8be3fdf5bf5ad0ef70ee72619bcd",
      "kind": "transparent"
    },
    {
      "address": "0xc7F1B9C72B8230E470420A4b69af7c50781A3f44",
      "txHash": "0x7022448c9db71e407d70c571fcf6d64bb1a2bb83589326305b5a25843bcc1168",
      "kind": "transparent"
    },
    {
      "address": "0x3d1775dA27Dd9c6d936795Ac21b94CDeD8baBD69",
      "txHash": "0x4fb6e948f8aa11badb20e12d6511200d99cf8869183b18810a074da275f4a6f4",
      "kind": "transparent"
    },
    {
      "address": "0xe250b65B6fa2a61fb99F7C41C1C615B0ed3321f5",
      "txHash": "0xc3596585414c72078732376341695f62fe55b12b0e4050e63bb5339d30f63b26",
      "kind": "transparent"
    },
    {
      "address": "0x54B110d556502A4dc5Ca35F8532249C22e4D9742",
      "txHash": "0x0a49d3b867fbc7fc2a51ad34379352695c7b5cf0e7cfa13451249a83f6b34b42",
      "kind": "transparent"
    },
    {
      "address": "0xb9B541691aD966c85f0A152dfaFa1901E1831001",
      "txHash": "0x9d48b897f97a30391f5c9f4c472f9b2be3c877b680ecd8cb18063f91fcd0005b",
      "kind": "transparent"
    },
    {
      "address": "0xDde063eBe8E85D666AD99f731B4Dbf8C98F29708",
      "txHash": "0xa226578f9e3e62d22c11c456128d8904cae47396cfd049b5c92987e76ba8f696",
      "kind": "transparent"
    },
    {
      "address": "0xD5724171C2b7f0AA717a324626050BD05767e2C6",
      "txHash": "0x1f10976ff39d1174ddbf45102bbe2f64529fa80bdf1ec3021dd6eadf0d8af79c",
      "kind": "transparent"
    },
    {
      "address": "0x54aE90Be2DEE0A960953c724839541E75bb1F471",
      "txHash": "0x5fc9e37fa7b84ce0e33df7e75070b0382692e39161ab1bbdaff54a050bedb00a",
      "kind": "transparent"
    },
    {
      "address": "0x8468B8Efe7eeA52978Ccfe3C0248Ca6F6895e166",
      "txHash": "0xde88add37caf5079941ab21c2824019204cad5a9dacc461b0fc604a9ada99af8",
      "kind": "transparent"
    },
    {
      "address": "0x62B17c9083Db5941197E83BD385985B8878B58Fb",
      "txHash": "0x0f39ca5ec1f478eeff518f62d274f1195056ec900b3c9cbc3ba4e2664edbc0e5",
      "kind": "transparent"
    },
    {
      "address": "0x1f5A97fB665e295303D2F7215bA2160cc5313c8E",
      "txHash": "0xfcee5615f19b7fe77923786ad9f666546c04317a170d78e578c632c4983ca7b6",
      "kind": "transparent"
    }
  ],
  "impls": {
    "5f03b3af2ec472be22b0343bfb88cbdbc086aff79fc65541ff1a5b474f6f35e1": {
      "address": "0x2f58A698de73E34e9DE2bEB41528046c77CBb225",
      "txHash": "0x4d28f97654965b58f1be026b457b35f16ddb6a27111ebcc25d9cffaf6007b959",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleStrategy.sol:23"
          },
          {
            "contract": "IdleStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleStrategy.sol:25"
          },
          {
            "contract": "IdleStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleStrategy.sol:27"
          },
          {
            "contract": "IdleStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/IdleStrategy.sol:29"
          },
          {
            "contract": "IdleStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)1427",
            "src": "contracts/IdleStrategy.sol:31"
          },
          {
            "contract": "IdleStrategy",
            "label": "idleToken",
            "type": "t_contract(IIdleToken)1638",
            "src": "contracts/IdleStrategy.sol:33"
          },
          {
            "contract": "IdleStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/IdleStrategy.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)1427": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IIdleToken)1638": {
            "label": "contract IIdleToken"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "644e95e9bfa551e571419c61804b5f33c09a034d668a5be963eb802c81f31e36": {
      "address": "0x4EbE360E970E6E5b98C974d2E9102D46A96Bd3BB",
      "txHash": "0x8988e2a4fe59b98f620c6ebffdb1440a1aec4357a51792330d7cb1e8d183cd28",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)1937",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)1937": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d76892e9938e07bfb565f306b564463a3e8b7c04075adea7b82036cce505741b": {
      "address": "0x64239152e4fa7913C790b1BdcE332FccDAAa7219",
      "txHash": "0x31d47009e767b3869c705352cf8e8359bb0d7dd4473da026555fdbe63f1ec1f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:6"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "tranche",
            "type": "t_address",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:7"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:8"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "rewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:9"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "usersStakes",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:11"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "rewardsIndexes",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:13"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "usersIndexes",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:15"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "lockedRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:17"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "lockedRewardsLastBlock",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:19"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:21"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "coolingPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b73ef8ec3488ca17b0569842f5abd5db10eafe9f366b1562528e4d8d8c2e2145": {
      "address": "0x10CeCc30087f4B3E894DAD8398307FAA2f0ac2B9",
      "txHash": "0x8960ec6c48c7721a73c50e99225ac601f26971786bc53a711213d088914d7c50",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleStrategy.sol:23"
          },
          {
            "contract": "IdleStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleStrategy.sol:25"
          },
          {
            "contract": "IdleStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleStrategy.sol:27"
          },
          {
            "contract": "IdleStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/IdleStrategy.sol:29"
          },
          {
            "contract": "IdleStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)1450",
            "src": "contracts/IdleStrategy.sol:31"
          },
          {
            "contract": "IdleStrategy",
            "label": "idleToken",
            "type": "t_contract(IIdleToken)1664",
            "src": "contracts/IdleStrategy.sol:33"
          },
          {
            "contract": "IdleStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/IdleStrategy.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)1450": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IIdleToken)1664": {
            "label": "contract IIdleToken"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0995698fb7a5b1794a4b3880970e9986fe29bcb4534dfb69d07344e0483963a0": {
      "address": "0xE8CC6cfA4d8610A86fA988E11E38cA385A93Aecc",
      "txHash": "0x1bc1f4c05fc51c33796361ddff1b4140c49dd9cda8bd6ad1de0d6cac400cb1a3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2457",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2457": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cc2b81bddbc3b44daac563622fc3eb1ab65b0099053b6693f959b64826d620c2": {
      "address": "0x2d90DF48C706874F1b9A02054273996FBF458964",
      "txHash": "0xb033f71c92ebf745d11bfa22b172aa6f2895fa2ffe9477f161e256a1bf48d675",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2821",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2821": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ba4c73beea2ac393c5138762fc1192e6cb3c76031f798dc8d0928489da05d808": {
      "address": "0x3cD51E62e14926DDa0949Ea3869D5FAD0B9aB844",
      "txHash": "0x2cbd4dbc099b74083694803a35bcba8bf35078e80ffeb987cbbca70e050ad9cb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)1937",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)1937": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4c3599baf0adb496da52c4b60a4d3b04a8c9a1f749c971eefbdad3854e40dfbf": {
      "address": "0x9Ce83D1fD9bB82540FCb48f69870D7153E71533C",
      "txHash": "0x51758c7963151f1f5dc1a0cf1f8c283f8706e8c0ec93734028da7fd6593098f9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:6"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "tranche",
            "type": "t_address",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:7"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:8"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "rewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:9"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "usersStakes",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:11"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "rewardsIndexes",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:13"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "usersIndexes",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:15"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "lockedRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:17"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "lockedRewardsLastBlock",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:19"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:21"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "coolingPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6f7f8d4f4c1af117ad29ee49d92af835b1de6834acda257e84bcc6fd71a830fd": {
      "address": "0xb93450f818AE2Ce89bc5d660049753883aCbB883",
      "txHash": "0x3ee6c4d35ee4a9d40a6c6fea1e31917145e9ba04a1eed909e6ef749ed1194b08",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)1937",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)1937": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9287c97487c678298b375520dcb9102a1b227997717f42c933c4790e952071e4": {
      "address": "0xD04843aC2ae7cfb7Fe9fF6ff43C808aF7A030527",
      "txHash": "0x886ec209fc64606024bec61038f5cb3c798265c4538b4353075e0d44293c2677",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/strategies/idle/IdleStrategy.sol:23"
          },
          {
            "contract": "IdleStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/idle/IdleStrategy.sol:25"
          },
          {
            "contract": "IdleStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/idle/IdleStrategy.sol:27"
          },
          {
            "contract": "IdleStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/idle/IdleStrategy.sol:29"
          },
          {
            "contract": "IdleStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)7995",
            "src": "contracts/strategies/idle/IdleStrategy.sol:31"
          },
          {
            "contract": "IdleStrategy",
            "label": "idleToken",
            "type": "t_contract(IIdleToken)8244",
            "src": "contracts/strategies/idle/IdleStrategy.sol:33"
          },
          {
            "contract": "IdleStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/idle/IdleStrategy.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)7995": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IIdleToken)8244": {
            "label": "contract IIdleToken"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9996827d1b28233f9aa795b7475d633c9e9a72e67f8a903e32fee02a3cbaa876": {
      "address": "0xF07c97C7437C863932bFa362731d9b0F7420c719",
      "txHash": "0xcfc93ade776497d0eb1fa809ca42e7905e732ee502a036d60233ec4e4b4bbacb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleLidoStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:28"
          },
          {
            "contract": "IdleLidoStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:30"
          },
          {
            "contract": "IdleLidoStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:32"
          },
          {
            "contract": "IdleLidoStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:34"
          },
          {
            "contract": "IdleLidoStrategy",
            "label": "lido",
            "type": "t_contract(ILido)8415",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:37"
          },
          {
            "contract": "IdleLidoStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ILido)8415": {
            "label": "contract ILido"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "1544c16e2920cb8fe16b3ad660d42d6677e00f021a9989f789b26c23d3e17ae4": {
      "address": "0xEE671E6d7AAF2BB374D5f98c40777a0824021A78",
      "txHash": "0x325825c7a4535627cc3c038b687e525865f6dc7d526fba9d23bb9d49200c44ea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "643e5244187ff63dbc27022410aa2d3d76115b94bc6a30f173eedcd76a2b2360": {
      "address": "0x4ADEB02DD22AF00a8B6189beE89769eD76129956",
      "txHash": "0xc0eab8b5ffaf14dcc105193138f7f4959d7317b02568609187efb450712581b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "BLOCKS_PER_YEAR",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:86"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestPriceIncrease",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:88"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestInterval",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:90"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e73b1a89cc6bdabc0d9dca8b1915fa642e118d08f829184a7a07000636712cbd": {
      "address": "0x31BEE1fB186Fc3Bbc8f7639206d675cf3deA2140",
      "txHash": "0xb9ad45c252a6a98ef89db88cc3c6eb43e820fd92fffb55f3bb70b24b89f903c8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)1937",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)1937": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "85dce9e32d718a241afd7d676ce37d45fc99ac3bcfa39af124093bb12a79e45e": {
      "address": "0x81dBe9fF361C0422B86d929a91B48b79DA041a70",
      "txHash": "0xf8d53f897db13d235f818bc789a63129dbdedc5c48f436f195c369d54582fbd5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "BLOCKS_PER_YEAR",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:86"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestPriceIncrease",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:88"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestInterval",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:90"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fafe7dee7a4d4a5a95dac76b1aece869dc2c056d869118eeea05c9facd97a23d": {
      "address": "0x03563dEEf50B957f69232dE055Ea1a8Aa6D854D9",
      "txHash": "0x9670c10b425ee915f3e740844f17231ab3fa4c7383462b3c6859d99df165a907",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "BLOCKS_PER_YEAR",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:86"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestPriceIncrease",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:88"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestInterval",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:90"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0ae2800a4112d13cd3ebf400287fdc33022a70d83fd569d718319fe4c81c23f4": {
      "address": "0x6d8793ACBE1bF71072a0cFb24C0d1f6ABf897daf",
      "txHash": "0xe3447fb45e1ee04ee1c65e6d6afe31716924c59b3bc36a24dfcb010bb0ee843f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "BLOCKS_PER_YEAR",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:86"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestPriceIncrease",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:88"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestInterval",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:90"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5865bbe426b7fac4076bb86f3fd916647d4ad42f256f672aa4660fb796181f3d": {
      "address": "0x944D369522eb919064B52b9665f4151E52b5045a",
      "txHash": "0x4bbdd9a0b2370c32eda2a75f6015302babae8c381519b3800f2692d72d6ca916",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:26"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:29"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:32"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:35"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "imUSD",
            "type": "t_contract(ISavingsContractV2)10233",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:38"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9720",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:41"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "govToken",
            "type": "t_address",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:45"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "vault",
            "type": "t_contract(IVault)10775",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:48"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:51"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "uniswapRouterPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:54"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "uniswapV2Router02",
            "type": "t_contract(IUniswapV2Router02)10702",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:57"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "lastIndexAmount",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:60"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "lastIndexedTime",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:63"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "rewardLastRound",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:69"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:72"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:74"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:76"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ISavingsContractV2)10233": {
            "label": "contract ISavingsContractV2"
          },
          "t_contract(IERC20Detailed)9720": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IVault)10775": {
            "label": "contract IVault"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)10702": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4812a2d9cfdcb48089d4aaee2d981480e08eae2a518346fbf3268ddaf3953fd9": {
      "address": "0xA4b662eE32bf65e839aE27cF9f5550354FFE41ce",
      "txHash": "0x1c463a825bc98ec324bdcbd70f3e16f081b6fdd2a79c55e27960a053451c1da7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "BLOCKS_PER_YEAR",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:86"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestPriceIncrease",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:88"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestInterval",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:90"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c68cb8e0b5cfaaa06d1b9d8c09e2edaaa1d17995bd1675bb926b9231b802cb7d": {
      "address": "0x7b8c3Ee1BAFb4aF5826D41137cD5cAF878083619",
      "txHash": "0xb420ee16c7e4c8d56f333870835aed726ca2a96993029f792cda6083d9a92332",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:26"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:29"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:32"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:35"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "imUSD",
            "type": "t_contract(ISavingsContractV2)10233",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:38"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9720",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:41"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "govToken",
            "type": "t_address",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:45"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "vault",
            "type": "t_contract(IVault)10775",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:48"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:51"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "uniswapRouterPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:54"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "uniswapV2Router02",
            "type": "t_contract(IUniswapV2Router02)10702",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:57"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "lastIndexAmount",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:60"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "lastIndexedTime",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:63"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "rewardLastRound",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:69"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:72"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:74"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:76"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:78"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "lastApr",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ISavingsContractV2)10233": {
            "label": "contract ISavingsContractV2"
          },
          "t_contract(IERC20Detailed)9720": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IVault)10775": {
            "label": "contract IVault"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)10702": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4e54e927cb0356ebe2fc2d4b71052954bdad823a9418261cfeef0fe9e51d2222": {
      "address": "0x6042D559Acf454F73d8c0319386e46F65eE77FD7",
      "txHash": "0x4ec083c14050ea7f5552c332dee8c9ed22c6a91e23fc95a83f2eab5557720850",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "BLOCKS_PER_YEAR",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:86"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestPriceIncrease",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:88"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestInterval",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:90"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "31146d3dff8a940b81172af742db86ea141ba1ee54485f9fc7f1840cf0971cd7": {
      "address": "0x8F889dc453750c91C921BD6Fb9a33a8A579b1BaA",
      "txHash": "0xfd7e72163a481a79bdf4dbe004ef0d9acfa6b74237402c15f6d885596bcbcd51",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "BLOCKS_PER_YEAR",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:86"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestPriceIncrease",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:88"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestInterval",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:90"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "aef2904551d25327b8abc52c793827429358dc56dd7cdc363e89333ad80279ef": {
      "address": "0xb73D51af8Fc15423664F7ECd759179aD4e6a26ee",
      "txHash": "0x77c70e05d17c4e500bb3a6f1321a7b9338ef10b11019955ec3b1eca6dfb3e585",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "BLOCKS_PER_YEAR",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:86"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestPriceIncrease",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:88"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestInterval",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:90"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ca488f70ea4c446445390be1f33fc001fa4a5a80748371bf2eaefdbdf37a1805": {
      "address": "0xAcDF8fDDc5031b11ECd2EcC46898E059989A8cD5",
      "txHash": "0xecffe234d6496978b3795218c9900f2914259a057ec5bab6d2a689d322fac8cc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "deps/euler/contracts/idle/IdleEulerStrategy.sol:29"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "token",
            "type": "t_address",
            "src": "deps/euler/contracts/idle/IdleEulerStrategy.sol:31"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "deps/euler/contracts/idle/IdleEulerStrategy.sol:33"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "deps/euler/contracts/idle/IdleEulerStrategy.sol:35"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)23611",
            "src": "deps/euler/contracts/idle/IdleEulerStrategy.sol:37"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "eToken",
            "type": "t_contract(IEToken)23678",
            "src": "deps/euler/contracts/idle/IdleEulerStrategy.sol:39"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "deps/euler/contracts/idle/IdleEulerStrategy.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)23611": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IEToken)23678": {
            "label": "contract IEToken"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c50221dfd6b91083ff2c4fd8d58a06303615ab2753d9922ea47ffc73ef76d8a4": {
      "address": "0x3886557ed1698dbd496a4A0F2e00dF8918eA45E0",
      "txHash": "0xe150cfd2054d01be197fbd2082228886b15e5a8a7d1c44ecae4ff7b47fc9cce0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/strategies/euler/IdleEulerStrategy.sol:29"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/euler/IdleEulerStrategy.sol:31"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/euler/IdleEulerStrategy.sol:33"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/euler/IdleEulerStrategy.sol:35"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9827",
            "src": "contracts/strategies/euler/IdleEulerStrategy.sol:37"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "eToken",
            "type": "t_contract(IEToken)11782",
            "src": "contracts/strategies/euler/IdleEulerStrategy.sol:39"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/euler/IdleEulerStrategy.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)9827": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IEToken)11782": {
            "label": "contract IEToken"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "93746a7e77459e6459dc1ce42f460d0371b0916f1206ee00d2db79b39810b28d": {
      "address": "0x6F322059CaF329B598b3C09De27C4F851780b62f",
      "txHash": "0xd03efb89f0402077a53fc71bd39f0cd77729a6dbebf2dd73747ba3dc7fc415f1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2006",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2006": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "270c8b8b2e166af1159362d8b34575b2c75a521a1b0b20a4dee7e368d52fbe83": {
      "address": "0xFf35F8A1202e58039c7ccB50bFa75B8254F0E821",
      "txHash": "0xdb8233c2e01bcc0861d2b127684d90e8feba88ee123aaa4b3120c6f040733f7f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:24"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:27"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:30"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:33"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9761",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:36"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:39"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "govToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:45"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "lastApr",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)9761": {
            "label": "contract IERC20Detailed"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "707729f9afea90249bd253c34d0ef9df923ea86367a78d8f1c6369ef72e5e53e": {
      "address": "0x478601CaBe3C3c0BaD9bD5ed024c36648b9a148E",
      "txHash": "0xcbf8b5321129b4ab3c608aa78112f3c0713e56cc1597947c7453e55f9b3da322",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:24"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "cpToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:27"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:30"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:33"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9761",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:36"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:39"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "govToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:45"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "lastApr",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)9761": {
            "label": "contract IERC20Detailed"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "067530caef5f07e9215075333c24c1061de59758e39c8c73c11f8433ebb44a0c": {
      "address": "0xc9952Fc93Fa9bE383ccB39008c786b9f94eAc95d",
      "txHash": "0xde405d17781639e5415f4503deef2f74cbe62cd082bbbfa6da564eb502af0fcb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:24"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "cpToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:27"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:30"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:33"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9761",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:36"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:39"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "govToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:45"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "lastApr",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)9761": {
            "label": "contract IERC20Detailed"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b7e0dc8083c03ba4ef1d1b79700a8587471be07ebbacfff4ae9d9180080602d7": {
      "address": "0xDde063eBe8E85D666AD99f731B4Dbf8C98F29708",
      "txHash": "0x3e608c72e5807289091a6c3f0b05b2c339cb06560f8caf255030d6d090d862bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:24"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "cpToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:27"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:30"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:33"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9781",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:36"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:39"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "govToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:45"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "lastApr",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)9781": {
            "label": "contract IERC20Detailed"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4e4423ba6bc9d8872c6076f72870a7dae453163764705fa80b97089a97155d60": {
      "address": "0x371ec16a15c00A3dEac8e6ab929d8da4D68C60cb",
      "txHash": "0xfbfd2e6c4fe9ebd030eb7329588a98932c7fd0efebcb8ea23e7741db6ac223d4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:25"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "cpToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:28"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:31"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:34"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9757",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:37"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:40"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "govToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:46"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "lastApr",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:49"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)4969",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)9757": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IUniswapV2Router02)4969": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "637c5ddac46d0f9384202786667ccf969b3e7cb314a4690b2e86986d34c8722d": {
      "address": "0x526d62D71c4C61aD4365Ef5dE3d3E2983b14020c",
      "txHash": "0x339c5f8cdd4f878faaadd710d3fbbd6ee900a0889957aca06d0abcc4c8f7fac6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:25"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "cpToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:28"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:31"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:34"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9761",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:37"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:40"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "govToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:46"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "lastApr",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:49"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)4969",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)9761": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IUniswapV2Router02)4969": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "de9106a6003b417824c4d52286d105ab6e273f0f72ab5acb96e75ba9a80bf04c": {
      "address": "0xBeD6E1FF4363730a56dfDcd6689e5D958085299d",
      "txHash": "0x64e0d880525d4d6ab844a53b8da9ce9b54dbadafdfd2cae2dbab0788bacbec99",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2006",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2006": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ab40741b101ebedd855a972b7276c4716199954028ccaea377eb200aed7694b3": {
      "address": "0x7CcAF1E4b3224B9920708e35A0C396497Fc08eb5",
      "txHash": "0x4d80d784875a3301d069fcb0a9b89d37d768815de2e409ab5fb32b75ad9730ee",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "_pool",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(ITruefiPool)11865",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:25"
          },
          {
            "label": "_farm",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(ITrueLegacyMultiFarm)11905",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:26"
          },
          {
            "label": "_lender",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(ITrueLender)11813",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:27"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IERC20WithDecimals)11795",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:28"
          },
          {
            "label": "_rewardToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20WithDecimals)11795",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:29"
          },
          {
            "label": "_farmTokens",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_contract(IERC20Upgradeable)954)dyn_storage",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:30"
          },
          {
            "label": "_rewardTokens",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:31"
          },
          {
            "label": "_oneToken",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:33"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "209",
            "type": "t_address",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_contract(IERC20Upgradeable)954)dyn_storage": {
            "label": "contract IERC20Upgradeable[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)954": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20WithDecimals)11795": {
            "label": "contract IERC20WithDecimals",
            "numberOfBytes": "20"
          },
          "t_contract(ITrueLegacyMultiFarm)11905": {
            "label": "contract ITrueLegacyMultiFarm",
            "numberOfBytes": "20"
          },
          "t_contract(ITrueLender)11813": {
            "label": "contract ITrueLender",
            "numberOfBytes": "20"
          },
          "t_contract(ITruefiPool)11865": {
            "label": "contract ITruefiPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "b7a0aab129d48f2982da896cd5100fa78ef7a1d02555bdb8d307b33403014b6c": {
      "address": "0x40072fC98B3A128950b1857Bd7Ce57B144477407",
      "txHash": "0x75ef0bd08925b8c3c02cd0ad4c1ac8f6237a8e75ee38fc189ff290762c42a57a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2534",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2534": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
