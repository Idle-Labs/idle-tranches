{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9438904ABC7d8944A6E2A89671fEf51C629af351",
    "txHash": "0x9183b517c69dc62e2f328f4b546d19ad2dd0e6b8ff4d0fa453befaf0c38df7f3"
  },
  "proxies": [
    {
      "address": "0x48a48c6694168093A3dEE02E9e8AC5a14169a652",
      "txHash": "0xb79cc07e803f9cb2b9062976fc4f9a157c36bf7a018b014c4a8b1cc9c7f618bc",
      "kind": "transparent"
    },
    {
      "address": "0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC",
      "txHash": "0x659ea86b3606da51579e74190a947b54f5441e1c7d9a3f8636cf560edf316cc8",
      "kind": "transparent"
    },
    {
      "address": "0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B",
      "txHash": "0x0229cc5fb1d15eb175d698432e8ac29308140d0e2121c1507d7ba1d9379942d4",
      "kind": "transparent"
    },
    {
      "address": "0x4473bc90118b18bE890Af42d793b5252c4dc382d",
      "txHash": "0xd5bbe30ae79aaa61f9dd6125b703007f8bd1f5b80f85de3e1a6522ec886a310c",
      "kind": "transparent"
    },
    {
      "address": "0x73A44027bDAF5D71296d2C73cfb13e561c76a916",
      "txHash": "0xd6ebf10e0282725896defcf39dabf90996435d197385d347e90a3e3b90e070f2",
      "kind": "transparent"
    },
    {
      "address": "0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba",
      "txHash": "0x0c9a660593050f756eef8671050301ffef8285737ef1e9db4c7b063fe2383447",
      "kind": "transparent"
    },
    {
      "address": "0x0cac674ebD77bBD899f6079932768f6d59Da089A",
      "txHash": "0x0eefe462e4df51cd28866b12bae36504b99591c3e896b653f39d8634693b7c08",
      "kind": "transparent"
    },
    {
      "address": "0xBc1707D16541108b7035E52e1DAeb27ca4B6B79F",
      "txHash": "0x56c8e72ed083404655493464342c1b7f98fa1f0aa21c32891347c47ea6dd4c00",
      "kind": "transparent"
    },
    {
      "address": "0x35168324dC1981aDDc3bC915788e200BeDF77865",
      "txHash": "0xcfaaa719a3ae2b2c84b139ac4ae1d23e710a5f18b4c451fdf0fd54bc587ec7a6",
      "kind": "transparent"
    },
    {
      "address": "0xDb7306Ddba67DD9d5aF08204E314F4DE6c29e20d",
      "txHash": "0xdae69952c20c1b277fa4ce38ecacba5ee05d43ae629b59b3e97ae3f54f6f0fa2",
      "kind": "transparent"
    },
    {
      "address": "0x271cE5dED4cCbD28833bddF8a8093517299920f0",
      "txHash": "0x43a4b3e3399881048108d182243298f100e2bd1f959814d317efeb9c031a6309",
      "kind": "transparent"
    },
    {
      "address": "0x4Ae60BC9A3eFc160AE2EbA70947a9b47Ad2b9094",
      "txHash": "0x15d655f0670d55d27297721d8aad5cc8de5050d4b07f9a32df1bdcf0eef6c6db",
      "kind": "transparent"
    },
    {
      "address": "0x3bCbA0AfD36C9B350f46c570f89ab70817D122CB",
      "txHash": "0x41bbe392b4a326ebb89a1051838c951c47e39b1ebb93ab5ef906c01b86c9aac2",
      "kind": "transparent"
    },
    {
      "address": "0x854b5b0f86Bd1B53492736245a728e0a384252A2",
      "txHash": "0x6b37be8d6a667e93eb9ac6fc552438c690c275bfde68230a4fb96a7d6be15815",
      "kind": "transparent"
    },
    {
      "address": "0x0198792f2849397908C092b6B57654e1a57a4CDC",
      "txHash": "0x5fde38f68030691be5cc827a785c01bd0219d4610918c544909859c46de3facf",
      "kind": "transparent"
    },
    {
      "address": "0x5DaD2eEF80a8cdFD930aB8f0353cA13Bd48c4346",
      "txHash": "0x2cb54d7e666cbdbf89b44ab3f36ef847414e8be3fdf5bf5ad0ef70ee72619bcd",
      "kind": "transparent"
    },
    {
      "address": "0xc7F1B9C72B8230E470420A4b69af7c50781A3f44",
      "txHash": "0x7022448c9db71e407d70c571fcf6d64bb1a2bb83589326305b5a25843bcc1168",
      "kind": "transparent"
    },
    {
      "address": "0x3d1775dA27Dd9c6d936795Ac21b94CDeD8baBD69",
      "txHash": "0x4fb6e948f8aa11badb20e12d6511200d99cf8869183b18810a074da275f4a6f4",
      "kind": "transparent"
    },
    {
      "address": "0xe250b65B6fa2a61fb99F7C41C1C615B0ed3321f5",
      "txHash": "0xc3596585414c72078732376341695f62fe55b12b0e4050e63bb5339d30f63b26",
      "kind": "transparent"
    },
    {
      "address": "0x54B110d556502A4dc5Ca35F8532249C22e4D9742",
      "txHash": "0x0a49d3b867fbc7fc2a51ad34379352695c7b5cf0e7cfa13451249a83f6b34b42",
      "kind": "transparent"
    },
    {
      "address": "0xb9B541691aD966c85f0A152dfaFa1901E1831001",
      "txHash": "0x9d48b897f97a30391f5c9f4c472f9b2be3c877b680ecd8cb18063f91fcd0005b",
      "kind": "transparent"
    },
    {
      "address": "0xDde063eBe8E85D666AD99f731B4Dbf8C98F29708",
      "txHash": "0xa226578f9e3e62d22c11c456128d8904cae47396cfd049b5c92987e76ba8f696",
      "kind": "transparent"
    },
    {
      "address": "0xD5724171C2b7f0AA717a324626050BD05767e2C6",
      "txHash": "0x1f10976ff39d1174ddbf45102bbe2f64529fa80bdf1ec3021dd6eadf0d8af79c",
      "kind": "transparent"
    },
    {
      "address": "0x54aE90Be2DEE0A960953c724839541E75bb1F471",
      "txHash": "0x5fc9e37fa7b84ce0e33df7e75070b0382692e39161ab1bbdaff54a050bedb00a",
      "kind": "transparent"
    },
    {
      "address": "0x8468B8Efe7eeA52978Ccfe3C0248Ca6F6895e166",
      "txHash": "0xde88add37caf5079941ab21c2824019204cad5a9dacc461b0fc604a9ada99af8",
      "kind": "transparent"
    },
    {
      "address": "0x62B17c9083Db5941197E83BD385985B8878B58Fb",
      "txHash": "0x0f39ca5ec1f478eeff518f62d274f1195056ec900b3c9cbc3ba4e2664edbc0e5",
      "kind": "transparent"
    },
    {
      "address": "0x1f5A97fB665e295303D2F7215bA2160cc5313c8E",
      "txHash": "0xfcee5615f19b7fe77923786ad9f666546c04317a170d78e578c632c4983ca7b6",
      "kind": "transparent"
    },
    {
      "address": "0x37De1D299C93743472343699c58Ec95000870Dc5",
      "txHash": "0xc955b74807ab9e5d5d9cbc90b4b1145e512a5e58667bfa1f89a229f72cd87da9",
      "kind": "transparent"
    },
    {
      "address": "0xeF5bBAAC6757d34137d6a7CCdF919210f8C7a57C",
      "txHash": "0x755f2d32b796b01c4b17e7e3ee6504f9fe137e3cf1e6da45d4b9bee65cdaf237",
      "kind": "transparent"
    },
    {
      "address": "0x85bf981A474798940Ba61CD389De16449D23b877",
      "txHash": "0xf964a65ab8856934ae8494b95140feecf792b9d3ed9fbbe5b36b170cba3d40da",
      "kind": "transparent"
    },
    {
      "address": "0x29D094110c7A89f1Cb6c975df0A38Cae80F24b21",
      "txHash": "0xd04085d5212db3fe9e217d5ff9ea2cf81b0dec0599140c10fc5a2b747b6d2208",
      "kind": "transparent"
    },
    {
      "address": "0xeE5Ec95Ce2C8700a2d152db3249Fa13b163f0073",
      "txHash": "0x01608b9a34c1edc0bbb39a4500e713df093168e1c9aa12088259e5579545213e",
      "kind": "transparent"
    },
    {
      "address": "0xdC3757Ac421834135313D952Fe2fA7BB74b9CF4d",
      "txHash": "0xb5c14a0955d4e2fa1a323f2cd3d84eb4e10bd14123205a070aad754c36b36bc9",
      "kind": "transparent"
    },
    {
      "address": "0xCB2bd49d4b7874e6597deDFaa3E7b4E01831C5aF",
      "txHash": "0x2730473e5ca5726d665dfd52f728fe7a8876a2d5c14827d0604783e9ed1ac9b7",
      "kind": "transparent"
    },
    {
      "address": "0x6110deC9faC2A721c0EEe64B769A7E4cCcf4aa81",
      "txHash": "0xc2284603f72ba9e33efada611cc41b418e27227fe4f465a56939035f35c989ab",
      "kind": "transparent"
    },
    {
      "address": "0xF87ec7e1Ee467d7d78862089B92dd40497cBa5B8",
      "txHash": "0xe25f01cfd37f16ccb88df5ac362b7e4d1d0c2da2f88da9cc084b2816a98c256b",
      "kind": "transparent"
    },
    {
      "address": "0xFcA6b0573034BaAca576ea2Ef675032fB8dF6Cec",
      "txHash": "0x5cd094f99d8a3dc340b07b124c8691f418fbad5621bd100d660aab24d09e135e",
      "kind": "transparent"
    },
    {
      "address": "0xACcE8078c5C2c23Cc503201e5B142A9C77825cA5",
      "txHash": "0xdc29e754d2f35f5d9aeeb4c7037ce8cc3ae006d21f85a710e2d9852adf786156",
      "kind": "transparent"
    },
    {
      "address": "0xDcE26B2c78609b983cF91cCcD43E238353653b0E",
      "txHash": "0x13008186bd0b9cb5fd9fe0a89ccb7d7e3f1d49a825150e724cf92ccd13f62f68",
      "kind": "transparent"
    },
    {
      "address": "0x94BcFfc172Af69132BbCE7DF52D567e5ce651dcd",
      "txHash": "0x8b38cc3fd03f2eb3671536824d84dbfd99973f9aeb00228df31c13afc4ff13c4",
      "kind": "transparent"
    },
    {
      "address": "0x25e7337037817DD9Bddd0334Ca1591f370518893",
      "txHash": "0xd64c6d7eeb48eeb8ba56c781edf4a2e5c9bce7994f8fbc2b5582f5e73caf0d80",
      "kind": "transparent"
    },
    {
      "address": "0x1440469fba56Ea663DE7c29BBE8BcA7ad5158647",
      "txHash": "0xfd39a2d9568bdb99260fbe7c35cece30443fe0a5de2df3f84a469320dae01428",
      "kind": "transparent"
    },
    {
      "address": "0x425A8233d30A9a8f48c9319f8d80E232b6682817",
      "txHash": "0x6f6c23e254b08dda360337c3bcfb41da3a046566fb248462fa80f8c1d8eae0e2",
      "kind": "transparent"
    },
    {
      "address": "0xF6954B03d6a94Ba9e8C80CBE5824f22a401EE5D2",
      "txHash": "0xa257fc34c1e55c9c0ce3a231c5d2bff35a32a7b1d3171aa5ac8d392355dfc5ac",
      "kind": "transparent"
    },
    {
      "address": "0x84B2dEaF87A398F25ec5833000F72B6a4906b5AC",
      "txHash": "0x0a5a59bf328726a4118615d31f70ce85d7b464247f9c4b5e9c957b9eddff1fee",
      "kind": "transparent"
    },
    {
      "address": "0x73f3fB86Cb579eEeA9d482df2E91B6770A42FD6a",
      "txHash": "0xc77f18f3ea25f41751b68a6220fc4de1a44afe2d2a9b14e98a15173758d12012",
      "kind": "transparent"
    },
    {
      "address": "0x42c21C576588f1BeF340A26fa3932bA41528f2D3",
      "txHash": "0xb1252a5d06228f87842fbc56ba4f2f28fae5754cbcadc60389fd70c8d9487187",
      "kind": "transparent"
    },
    {
      "address": "0x0FE4Fc1301aFe4aFE8C3ac288c3E13cDaCe71b04",
      "txHash": "0x6f5928a5443db1276e5682fe5976d0ec80df85fad015709f6ab8804358b8b075",
      "kind": "transparent"
    },
    {
      "address": "0xDc7777C771a6e4B3A82830781bDDe4DBC78f320e",
      "txHash": "0x3d00bec3649835706ba004757305da520c248133fd36893c20b7a63e828aee65",
      "kind": "transparent"
    },
    {
      "address": "0xAF141907C3185bEE2d451b5a72b89232B0340652",
      "txHash": "0x00a5a07484d46e059ec7afe3f584893cadac7f357067e978c1970c7f1949fa07",
      "kind": "transparent"
    },
    {
      "address": "0x2D29c277Ac61376Fb011DCAFCe03EA3C9485f4c2",
      "txHash": "0xc86e9a64632f7e27d36fc284aecf3101a63b048e05b403866c2dbdc68a2fabfb",
      "kind": "transparent"
    },
    {
      "address": "0x6c14a1A28dD6DaE5734fD960BaC0B89a6b401CFD",
      "txHash": "0x935800702ead787004857f62335e91e6463e475ea4a871382c5775519cabb2c9",
      "kind": "transparent"
    },
    {
      "address": "0x9182A7C9D9858d54816baC7e3C049B26d3fc56bB",
      "txHash": "0x863cabae194b3e2c8248d935526688251b1103e196a9b7f35c3273f82b2cb4a1",
      "kind": "transparent"
    },
    {
      "address": "0x57E142278E93d721F3eBD52EC5D2D28484862f32",
      "txHash": "0xa4edc1736e443baba4261857c851a25dc5a44599479106e5bb1491254e7d33bb",
      "kind": "transparent"
    },
    {
      "address": "0x209D0dF488D7863F59b888EC21cE925f7Bfd4EB8",
      "txHash": "0xbfdaa876018b98d5c386d7a061a286ec731b69123b0505445c79a429b5afc796",
      "kind": "transparent"
    },
    {
      "address": "0xfa3AfC9a194BaBD56e743fA3b7aA2CcbED3eAaad",
      "txHash": "0x1db6d72a1c446943f33f22772dd2332a64d7f9972a585bad6db11d3ccd376b25",
      "kind": "transparent"
    },
    {
      "address": "0xeC9482040e6483B7459CC0Db05d51dfA3D3068E1",
      "txHash": "0x9604c13b2891a7dda6753a706ca1f04cf9016ee3de943d51693f6709d15658ae",
      "kind": "transparent"
    },
    {
      "address": "0x62aA57dD00C3D77f984379892c857bEF58fc7722",
      "txHash": "0x2361192c3bfaefb7a6f9219de010ea5ce490d36b78dc6d7caa359f9fdd7936ac",
      "kind": "transparent"
    },
    {
      "address": "0x9708B5398382EE064A8E718972670351F1c2c860",
      "txHash": "0xe15f78fd338b90ccc1b844da327ee09c9e9accdd3be9e6f89c8e54808d4a0e92",
      "kind": "transparent"
    },
    {
      "address": "0x62A0369c6BB00054E589D12aaD7ad81eD789514b",
      "txHash": "0x5d0e198cacd1f27e375e2ad4e0fd13346207d89287a12aa12e783c3802384e64",
      "kind": "transparent"
    },
    {
      "address": "0x931C080c7eD6B3C6988576654e5d56753DC92181",
      "txHash": "0xfd8426829815f0f9c09375c66b0170db13aa9408c049abd3a53638c6aab0cc79",
      "kind": "transparent"
    },
    {
      "address": "0x3687c0F8760371fc1BD1c7bc28695c388CdEd5a0",
      "txHash": "0x7ee6478f8a422601b69f88f0774fea2fd691f83dfcbd49cceb80e89879d7441f",
      "kind": "transparent"
    },
    {
      "address": "0xc8e2Fad99061407e947485c846bd05Eae9DE1991",
      "txHash": "0x6269e7c43b72e31412cce10cfc5ea74e7b5b98c5623b5741dc3e010f4e828ad6",
      "kind": "transparent"
    },
    {
      "address": "0x16F6bE72882B24527F94c7BCCabF77B62608083b",
      "txHash": "0xf5e7c5622bc61b3de44e0eb470e8274a32730c2c26ba8895160e72a65e8c5529",
      "kind": "transparent"
    },
    {
      "address": "0xBE0DACE8d62a14D2D872b20462B4725Cc50a1ff6",
      "txHash": "0x1a6cdc534b398ead55b080cc19adf9f34a9d8e53921031f8ca9a6b8bb1ec5537",
      "kind": "transparent"
    },
    {
      "address": "0xf52834404A51f5af1CDbeEdaA95B60c8B2187ba0",
      "txHash": "0x98d6ee1434450f5ad36e6dd7d373a8831a8e4529811bef8c6b924fe5fb98bed3",
      "kind": "transparent"
    },
    {
      "address": "0x00d39058943B4A6F01cb3386A7f44b84ab482c8B",
      "txHash": "0xc3ae1abf16b0a2b9fbc6aa3fc70fbc72cbe4f92add41621930020fcf3f7806a0",
      "kind": "transparent"
    },
    {
      "address": "0x8E0A8A5c1e5B3ac0670Ea5a613bB15724D51Fc37",
      "txHash": "0x0b1b6a90f236ee6361122112a8f8ea3c25dad01ec5eb4614838c8289c0da29b4",
      "kind": "transparent"
    },
    {
      "address": "0xB9c8d0A004772000eE199c4348f1933AcbFDC1bB",
      "txHash": "0x9b52f8a33b906d301cde7012f781fa10460317730a36842ec52ca829e18c5848",
      "kind": "transparent"
    },
    {
      "address": "0x0186e34DE71987303B4eD4a027Ed939a1178A73B",
      "txHash": "0xd0db5ba511a03058dcdbdb2b7d2a7bd0b9200416aae63dcb54b09bab01022bfc",
      "kind": "transparent"
    },
    {
      "address": "0x937C5122d6fbaddBd74a41E73B9dB6dEb66d515d",
      "txHash": "0x55dc4e7a05f5f7782ebeeb35b63a347c22457a832078ba736230efb5d065a858",
      "kind": "transparent"
    },
    {
      "address": "0x35Df8a95B348dd87167Ed00B3421ba15d95Ac1C8",
      "txHash": "0x988292f4f0f33c2e28f1eb28072d163e5153e9b7cb9b850ac3ee2994336ab214",
      "kind": "transparent"
    },
    {
      "address": "0x9e0c5ee5e4B187Cf18B23745FCF2b6aE66a9B52f",
      "txHash": "0x6a9a5074f0553a39491179ff07947a52f18fbfcf44b0abfb56aa8fa07bc1d9aa",
      "kind": "transparent"
    },
    {
      "address": "0x4BFD21eBcf0819E8c5A74346517f9Db849208Ac2",
      "txHash": "0xee8b605358bf9111d46d73e7515a49452a9e99a575a089dab5a3d36042bc0e8e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "5f03b3af2ec472be22b0343bfb88cbdbc086aff79fc65541ff1a5b474f6f35e1": {
      "address": "0x2f58A698de73E34e9DE2bEB41528046c77CBb225",
      "txHash": "0x4d28f97654965b58f1be026b457b35f16ddb6a27111ebcc25d9cffaf6007b959",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleStrategy.sol:23"
          },
          {
            "contract": "IdleStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleStrategy.sol:25"
          },
          {
            "contract": "IdleStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleStrategy.sol:27"
          },
          {
            "contract": "IdleStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/IdleStrategy.sol:29"
          },
          {
            "contract": "IdleStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)1427",
            "src": "contracts/IdleStrategy.sol:31"
          },
          {
            "contract": "IdleStrategy",
            "label": "idleToken",
            "type": "t_contract(IIdleToken)1638",
            "src": "contracts/IdleStrategy.sol:33"
          },
          {
            "contract": "IdleStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/IdleStrategy.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)1427": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IIdleToken)1638": {
            "label": "contract IIdleToken"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "644e95e9bfa551e571419c61804b5f33c09a034d668a5be963eb802c81f31e36": {
      "address": "0x4EbE360E970E6E5b98C974d2E9102D46A96Bd3BB",
      "txHash": "0x8988e2a4fe59b98f620c6ebffdb1440a1aec4357a51792330d7cb1e8d183cd28",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)1937",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)1937": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d76892e9938e07bfb565f306b564463a3e8b7c04075adea7b82036cce505741b": {
      "address": "0x64239152e4fa7913C790b1BdcE332FccDAAa7219",
      "txHash": "0x31d47009e767b3869c705352cf8e8359bb0d7dd4473da026555fdbe63f1ec1f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:6"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "tranche",
            "type": "t_address",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:7"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:8"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "rewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:9"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "usersStakes",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:11"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "rewardsIndexes",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:13"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "usersIndexes",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:15"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "lockedRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:17"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "lockedRewardsLastBlock",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:19"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:21"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "coolingPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b73ef8ec3488ca17b0569842f5abd5db10eafe9f366b1562528e4d8d8c2e2145": {
      "address": "0x10CeCc30087f4B3E894DAD8398307FAA2f0ac2B9",
      "txHash": "0x8960ec6c48c7721a73c50e99225ac601f26971786bc53a711213d088914d7c50",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleStrategy.sol:23"
          },
          {
            "contract": "IdleStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleStrategy.sol:25"
          },
          {
            "contract": "IdleStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleStrategy.sol:27"
          },
          {
            "contract": "IdleStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/IdleStrategy.sol:29"
          },
          {
            "contract": "IdleStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)1450",
            "src": "contracts/IdleStrategy.sol:31"
          },
          {
            "contract": "IdleStrategy",
            "label": "idleToken",
            "type": "t_contract(IIdleToken)1664",
            "src": "contracts/IdleStrategy.sol:33"
          },
          {
            "contract": "IdleStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/IdleStrategy.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)1450": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IIdleToken)1664": {
            "label": "contract IIdleToken"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0995698fb7a5b1794a4b3880970e9986fe29bcb4534dfb69d07344e0483963a0": {
      "address": "0xE8CC6cfA4d8610A86fA988E11E38cA385A93Aecc",
      "txHash": "0x1bc1f4c05fc51c33796361ddff1b4140c49dd9cda8bd6ad1de0d6cac400cb1a3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2457",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2457": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "cc2b81bddbc3b44daac563622fc3eb1ab65b0099053b6693f959b64826d620c2": {
      "address": "0x2d90DF48C706874F1b9A02054273996FBF458964",
      "txHash": "0xb033f71c92ebf745d11bfa22b172aa6f2895fa2ffe9477f161e256a1bf48d675",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2821",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2821": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ba4c73beea2ac393c5138762fc1192e6cb3c76031f798dc8d0928489da05d808": {
      "address": "0x3cD51E62e14926DDa0949Ea3869D5FAD0B9aB844",
      "txHash": "0x2cbd4dbc099b74083694803a35bcba8bf35078e80ffeb987cbbca70e050ad9cb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)1937",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)1937": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4c3599baf0adb496da52c4b60a4d3b04a8c9a1f749c971eefbdad3854e40dfbf": {
      "address": "0x9Ce83D1fD9bB82540FCb48f69870D7153E71533C",
      "txHash": "0x51758c7963151f1f5dc1a0cf1f8c283f8706e8c0ec93734028da7fd6593098f9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:6"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "tranche",
            "type": "t_address",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:7"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:8"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "rewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:9"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "usersStakes",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:11"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "rewardsIndexes",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:13"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "usersIndexes",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:15"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "lockedRewards",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:17"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "lockedRewardsLastBlock",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:19"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "totalStaked",
            "type": "t_uint256",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:21"
          },
          {
            "contract": "IdleCDOTrancheRewardsStorage",
            "label": "coolingPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOTrancheRewardsStorage.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6f7f8d4f4c1af117ad29ee49d92af835b1de6834acda257e84bcc6fd71a830fd": {
      "address": "0xb93450f818AE2Ce89bc5d660049753883aCbB883",
      "txHash": "0x3ee6c4d35ee4a9d40a6c6fea1e31917145e9ba04a1eed909e6ef749ed1194b08",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)1937",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)1937": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9287c97487c678298b375520dcb9102a1b227997717f42c933c4790e952071e4": {
      "address": "0xD04843aC2ae7cfb7Fe9fF6ff43C808aF7A030527",
      "txHash": "0x886ec209fc64606024bec61038f5cb3c798265c4538b4353075e0d44293c2677",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/strategies/idle/IdleStrategy.sol:23"
          },
          {
            "contract": "IdleStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/idle/IdleStrategy.sol:25"
          },
          {
            "contract": "IdleStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/idle/IdleStrategy.sol:27"
          },
          {
            "contract": "IdleStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/idle/IdleStrategy.sol:29"
          },
          {
            "contract": "IdleStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)7995",
            "src": "contracts/strategies/idle/IdleStrategy.sol:31"
          },
          {
            "contract": "IdleStrategy",
            "label": "idleToken",
            "type": "t_contract(IIdleToken)8244",
            "src": "contracts/strategies/idle/IdleStrategy.sol:33"
          },
          {
            "contract": "IdleStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/idle/IdleStrategy.sol:36"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)7995": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IIdleToken)8244": {
            "label": "contract IIdleToken"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "9996827d1b28233f9aa795b7475d633c9e9a72e67f8a903e32fee02a3cbaa876": {
      "address": "0xF07c97C7437C863932bFa362731d9b0F7420c719",
      "txHash": "0xcfc93ade776497d0eb1fa809ca42e7905e732ee502a036d60233ec4e4b4bbacb",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "IdleLidoStrategy",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:28"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "IdleLidoStrategy",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:30"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "IdleLidoStrategy",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:32"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "IdleLidoStrategy",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:34"
          },
          {
            "label": "lido",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(ILido)15878",
            "contract": "IdleLidoStrategy",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:37"
          },
          {
            "label": "whitelistedCDO",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "IdleLidoStrategy",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ILido)15878": {
            "label": "contract ILido",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "1544c16e2920cb8fe16b3ad660d42d6677e00f021a9989f789b26c23d3e17ae4": {
      "address": "0xEE671E6d7AAF2BB374D5f98c40777a0824021A78",
      "txHash": "0x325825c7a4535627cc3c038b687e525865f6dc7d526fba9d23bb9d49200c44ea",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "643e5244187ff63dbc27022410aa2d3d76115b94bc6a30f173eedcd76a2b2360": {
      "address": "0x4ADEB02DD22AF00a8B6189beE89769eD76129956",
      "txHash": "0xc0eab8b5ffaf14dcc105193138f7f4959d7317b02568609187efb450712581b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "BLOCKS_PER_YEAR",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:86"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestPriceIncrease",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:88"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestInterval",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:90"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "e73b1a89cc6bdabc0d9dca8b1915fa642e118d08f829184a7a07000636712cbd": {
      "address": "0x31BEE1fB186Fc3Bbc8f7639206d675cf3deA2140",
      "txHash": "0xb9ad45c252a6a98ef89db88cc3c6eb43e820fd92fffb55f3bb70b24b89f903c8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)1937",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)1937": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "85dce9e32d718a241afd7d676ce37d45fc99ac3bcfa39af124093bb12a79e45e": {
      "address": "0x81dBe9fF361C0422B86d929a91B48b79DA041a70",
      "txHash": "0xf8d53f897db13d235f818bc789a63129dbdedc5c48f436f195c369d54582fbd5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "BLOCKS_PER_YEAR",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:86"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestPriceIncrease",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:88"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestInterval",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:90"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "fafe7dee7a4d4a5a95dac76b1aece869dc2c056d869118eeea05c9facd97a23d": {
      "address": "0x03563dEEf50B957f69232dE055Ea1a8Aa6D854D9",
      "txHash": "0x9670c10b425ee915f3e740844f17231ab3fa4c7383462b3c6859d99df165a907",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "BLOCKS_PER_YEAR",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:86"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestPriceIncrease",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:88"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestInterval",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:90"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "0ae2800a4112d13cd3ebf400287fdc33022a70d83fd569d718319fe4c81c23f4": {
      "address": "0x6d8793ACBE1bF71072a0cFb24C0d1f6ABf897daf",
      "txHash": "0xe3447fb45e1ee04ee1c65e6d6afe31716924c59b3bc36a24dfcb010bb0ee843f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "BLOCKS_PER_YEAR",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:86"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestPriceIncrease",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:88"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestInterval",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:90"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "5865bbe426b7fac4076bb86f3fd916647d4ad42f256f672aa4660fb796181f3d": {
      "address": "0x944D369522eb919064B52b9665f4151E52b5045a",
      "txHash": "0x4bbdd9a0b2370c32eda2a75f6015302babae8c381519b3800f2692d72d6ca916",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:26"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:29"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:32"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:35"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "imUSD",
            "type": "t_contract(ISavingsContractV2)10233",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:38"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9720",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:41"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "govToken",
            "type": "t_address",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:45"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "vault",
            "type": "t_contract(IVault)10775",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:48"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:51"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "uniswapRouterPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:54"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "uniswapV2Router02",
            "type": "t_contract(IUniswapV2Router02)10702",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:57"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "lastIndexAmount",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:60"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "lastIndexedTime",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:63"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "rewardLastRound",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:69"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:72"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:74"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:76"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ISavingsContractV2)10233": {
            "label": "contract ISavingsContractV2"
          },
          "t_contract(IERC20Detailed)9720": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IVault)10775": {
            "label": "contract IVault"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)10702": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4812a2d9cfdcb48089d4aaee2d981480e08eae2a518346fbf3268ddaf3953fd9": {
      "address": "0xA4b662eE32bf65e839aE27cF9f5550354FFE41ce",
      "txHash": "0x1c463a825bc98ec324bdcbd70f3e16f081b6fdd2a79c55e27960a053451c1da7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "BLOCKS_PER_YEAR",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:86"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestPriceIncrease",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:88"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestInterval",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:90"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c68cb8e0b5cfaaa06d1b9d8c09e2edaaa1d17995bd1675bb926b9231b802cb7d": {
      "address": "0x7b8c3Ee1BAFb4aF5826D41137cD5cAF878083619",
      "txHash": "0xb420ee16c7e4c8d56f333870835aed726ca2a96993029f792cda6083d9a92332",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:26"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:29"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:32"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:35"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "imUSD",
            "type": "t_contract(ISavingsContractV2)10233",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:38"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9720",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:41"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "govToken",
            "type": "t_address",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:45"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "vault",
            "type": "t_contract(IVault)10775",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:48"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:51"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "uniswapRouterPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:54"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "uniswapV2Router02",
            "type": "t_contract(IUniswapV2Router02)10702",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:57"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "lastIndexAmount",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:60"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "lastIndexedTime",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:63"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "rewardLastRound",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:69"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:72"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:74"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:76"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:78"
          },
          {
            "contract": "IdleMStableStrategy",
            "label": "lastApr",
            "type": "t_uint256",
            "src": "contracts/strategies/mstable/IdleMStableStrategy.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(ISavingsContractV2)10233": {
            "label": "contract ISavingsContractV2"
          },
          "t_contract(IERC20Detailed)9720": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IVault)10775": {
            "label": "contract IVault"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)10702": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4e54e927cb0356ebe2fc2d4b71052954bdad823a9418261cfeef0fe9e51d2222": {
      "address": "0x6042D559Acf454F73d8c0319386e46F65eE77FD7",
      "txHash": "0x4ec083c14050ea7f5552c332dee8c9ed22c6a91e23fc95a83f2eab5557720850",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "BLOCKS_PER_YEAR",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:86"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestPriceIncrease",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:88"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestInterval",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:90"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "31146d3dff8a940b81172af742db86ea141ba1ee54485f9fc7f1840cf0971cd7": {
      "address": "0x8F889dc453750c91C921BD6Fb9a33a8A579b1BaA",
      "txHash": "0xfd7e72163a481a79bdf4dbe004ef0d9acfa6b74237402c15f6d885596bcbcd51",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "BLOCKS_PER_YEAR",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:86"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestPriceIncrease",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:88"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestInterval",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:90"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "aef2904551d25327b8abc52c793827429358dc56dd7cdc363e89333ad80279ef": {
      "address": "0xb73D51af8Fc15423664F7ECd759179aD4e6a26ee",
      "txHash": "0x77c70e05d17c4e500bb3a6f1321a7b9338ef10b11019955ec3b1eca6dfb3e585",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "ONE_CURVE_LP_TOKEN",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:33"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "poolID",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:35"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpToken",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:37"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveDeposit",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:39"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositor",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:41"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "depositPosition",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:43"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardPool",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:45"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "curveLpDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:47"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:60"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "convexRewards",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:63"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositPath",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:65"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "weth2DepositRouter",
            "type": "t_address",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:67"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "reward2WethPath",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:69"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "rewardRouter",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:71"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:74"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:76"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:78"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:80"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "BLOCKS_PER_YEAR",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:86"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestPriceIncrease",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:88"
          },
          {
            "contract": "ConvexBaseStrategy",
            "label": "latestHarvestInterval",
            "type": "t_uint256",
            "src": "contracts/strategies/convex/ConvexBaseStrategy.sol:90"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ca488f70ea4c446445390be1f33fc001fa4a5a80748371bf2eaefdbdf37a1805": {
      "address": "0xAcDF8fDDc5031b11ECd2EcC46898E059989A8cD5",
      "txHash": "0xecffe234d6496978b3795218c9900f2914259a057ec5bab6d2a689d322fac8cc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "deps/euler/contracts/idle/IdleEulerStrategy.sol:29"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "token",
            "type": "t_address",
            "src": "deps/euler/contracts/idle/IdleEulerStrategy.sol:31"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "deps/euler/contracts/idle/IdleEulerStrategy.sol:33"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "deps/euler/contracts/idle/IdleEulerStrategy.sol:35"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)23611",
            "src": "deps/euler/contracts/idle/IdleEulerStrategy.sol:37"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "eToken",
            "type": "t_contract(IEToken)23678",
            "src": "deps/euler/contracts/idle/IdleEulerStrategy.sol:39"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "deps/euler/contracts/idle/IdleEulerStrategy.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)23611": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IEToken)23678": {
            "label": "contract IEToken"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c50221dfd6b91083ff2c4fd8d58a06303615ab2753d9922ea47ffc73ef76d8a4": {
      "address": "0x3886557ed1698dbd496a4A0F2e00dF8918eA45E0",
      "txHash": "0xe150cfd2054d01be197fbd2082228886b15e5a8a7d1c44ecae4ff7b47fc9cce0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/strategies/euler/IdleEulerStrategy.sol:29"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/euler/IdleEulerStrategy.sol:31"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/euler/IdleEulerStrategy.sol:33"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/euler/IdleEulerStrategy.sol:35"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9827",
            "src": "contracts/strategies/euler/IdleEulerStrategy.sol:37"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "eToken",
            "type": "t_contract(IEToken)11782",
            "src": "contracts/strategies/euler/IdleEulerStrategy.sol:39"
          },
          {
            "contract": "IdleEulerStrategy",
            "label": "whitelistedCDO",
            "type": "t_address",
            "src": "contracts/strategies/euler/IdleEulerStrategy.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)9827": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IEToken)11782": {
            "label": "contract IEToken"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "93746a7e77459e6459dc1ce42f460d0371b0916f1206ee00d2db79b39810b28d": {
      "address": "0x6F322059CaF329B598b3C09De27C4F851780b62f",
      "txHash": "0xd03efb89f0402077a53fc71bd39f0cd77729a6dbebf2dd73747ba3dc7fc415f1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2006",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2006": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "270c8b8b2e166af1159362d8b34575b2c75a521a1b0b20a4dee7e368d52fbe83": {
      "address": "0xFf35F8A1202e58039c7ccB50bFa75B8254F0E821",
      "txHash": "0xdb8233c2e01bcc0861d2b127684d90e8feba88ee123aaa4b3120c6f040733f7f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:24"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:27"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:30"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:33"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9761",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:36"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:39"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "govToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:45"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "lastApr",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)9761": {
            "label": "contract IERC20Detailed"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "707729f9afea90249bd253c34d0ef9df923ea86367a78d8f1c6369ef72e5e53e": {
      "address": "0x478601CaBe3C3c0BaD9bD5ed024c36648b9a148E",
      "txHash": "0xcbf8b5321129b4ab3c608aa78112f3c0713e56cc1597947c7453e55f9b3da322",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:24"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "cpToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:27"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:30"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:33"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9761",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:36"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:39"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "govToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:45"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "lastApr",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)9761": {
            "label": "contract IERC20Detailed"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "067530caef5f07e9215075333c24c1061de59758e39c8c73c11f8433ebb44a0c": {
      "address": "0xc9952Fc93Fa9bE383ccB39008c786b9f94eAc95d",
      "txHash": "0xde405d17781639e5415f4503deef2f74cbe62cd082bbbfa6da564eb502af0fcb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:24"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "cpToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:27"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:30"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:33"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9761",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:36"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:39"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "govToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:45"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "lastApr",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)9761": {
            "label": "contract IERC20Detailed"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "b7e0dc8083c03ba4ef1d1b79700a8587471be07ebbacfff4ae9d9180080602d7": {
      "address": "0xDde063eBe8E85D666AD99f731B4Dbf8C98F29708",
      "txHash": "0x3e608c72e5807289091a6c3f0b05b2c339cb06560f8caf255030d6d090d862bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:24"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "cpToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:27"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:30"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:33"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9781",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:36"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:39"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "govToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:45"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "lastApr",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)9781": {
            "label": "contract IERC20Detailed"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "4e4423ba6bc9d8872c6076f72870a7dae453163764705fa80b97089a97155d60": {
      "address": "0x371ec16a15c00A3dEac8e6ab929d8da4D68C60cb",
      "txHash": "0xfbfd2e6c4fe9ebd030eb7329588a98932c7fd0efebcb8ea23e7741db6ac223d4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:25"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "cpToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:28"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:31"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:34"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)9757",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:37"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:40"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "govToken",
            "type": "t_address",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:46"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "lastApr",
            "type": "t_uint256",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:49"
          },
          {
            "contract": "IdleClearpoolStrategy",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)4969",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20Detailed)9757": {
            "label": "contract IERC20Detailed"
          },
          "t_contract(IUniswapV2Router02)4969": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "637c5ddac46d0f9384202786667ccf969b3e7cb314a4690b2e86986d34c8722d": {
      "address": "0x526d62D71c4C61aD4365Ef5dE3d3E2983b14020c",
      "txHash": "0x339c5f8cdd4f878faaadd710d3fbbd6ee900a0889957aca06d0abcc4c8f7fac6",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:25"
          },
          {
            "label": "cpToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:28"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:31"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:34"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)18764",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:37"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:40"
          },
          {
            "label": "govToken",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:46"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:49"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IUniswapV2Router02)5195",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)18764": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)5195": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "de9106a6003b417824c4d52286d105ab6e273f0f72ab5acb96e75ba9a80bf04c": {
      "address": "0xBeD6E1FF4363730a56dfDcd6689e5D958085299d",
      "txHash": "0x64e0d880525d4d6ab844a53b8da9ce9b54dbadafdfd2cae2dbab0788bacbec99",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2006",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2006": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ab40741b101ebedd855a972b7276c4716199954028ccaea377eb200aed7694b3": {
      "address": "0x7CcAF1E4b3224B9920708e35A0C396497Fc08eb5",
      "txHash": "0x4d80d784875a3301d069fcb0a9b89d37d768815de2e409ab5fb32b75ad9730ee",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "_pool",
            "offset": 0,
            "slot": "201",
            "type": "t_contract(ITruefiPool)11865",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:25"
          },
          {
            "label": "_farm",
            "offset": 0,
            "slot": "202",
            "type": "t_contract(ITrueLegacyMultiFarm)11905",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:26"
          },
          {
            "label": "_lender",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(ITrueLender)11813",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:27"
          },
          {
            "label": "_token",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IERC20WithDecimals)11795",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:28"
          },
          {
            "label": "_rewardToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20WithDecimals)11795",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:29"
          },
          {
            "label": "_farmTokens",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_contract(IERC20Upgradeable)954)dyn_storage",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:30"
          },
          {
            "label": "_rewardTokens",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:31"
          },
          {
            "label": "_oneToken",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:33"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "209",
            "type": "t_address",
            "contract": "IdleTruefiStrategy",
            "src": "contracts/strategies/truefi/IdleTruefiStrategy.sol:35"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_contract(IERC20Upgradeable)954)dyn_storage": {
            "label": "contract IERC20Upgradeable[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Upgradeable)954": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20WithDecimals)11795": {
            "label": "contract IERC20WithDecimals",
            "numberOfBytes": "20"
          },
          "t_contract(ITrueLegacyMultiFarm)11905": {
            "label": "contract ITrueLegacyMultiFarm",
            "numberOfBytes": "20"
          },
          "t_contract(ITrueLender)11813": {
            "label": "contract ITrueLender",
            "numberOfBytes": "20"
          },
          "t_contract(ITruefiPool)11865": {
            "label": "contract ITruefiPool",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "b7a0aab129d48f2982da896cd5100fa78ef7a1d02555bdb8d307b33403014b6c": {
      "address": "0x40072fC98B3A128950b1857Bd7Ce57B144477407",
      "txHash": "0x75ef0bd08925b8c3c02cd0ad4c1ac8f6237a8e75ee38fc189ff290762c42a57a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2534",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2534": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5c7ff83f1dc22998358c3aa16f0f661e05d6df4b3eaad517a4fb22edc003e58f": {
      "address": "0x7369495d64ec9F8Ff107E7857127C340781bb8c9",
      "txHash": "0x226b551106e165b630430b71c19e1dc29be49ec63c30ed777b124ec48b2ca8bc",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:27"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:30"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:33"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:36"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)9614",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:39"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:42"
          },
          {
            "label": "totalTokensStaked",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:45"
          },
          {
            "label": "totalTokensLocked",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:48"
          },
          {
            "label": "lastIndexedTime",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:51"
          },
          {
            "label": "latestHarvestBlock",
            "offset": 0,
            "slot": "210",
            "type": "t_uint128",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:55"
          },
          {
            "label": "lastApr",
            "offset": 16,
            "slot": "210",
            "type": "t_uint96",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:58"
          },
          {
            "label": "releaseBlocksPeriod",
            "offset": 28,
            "slot": "210",
            "type": "t_uint32",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:61"
          },
          {
            "label": "eToken",
            "offset": 0,
            "slot": "211",
            "type": "t_contract(IEToken)11764",
            "contract": "IdleLeveragedEulerStrategy",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:42"
          },
          {
            "label": "dToken",
            "offset": 0,
            "slot": "212",
            "type": "t_contract(IDToken)11681",
            "contract": "IdleLeveragedEulerStrategy",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:45"
          },
          {
            "label": "targetHealthScore",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "IdleLeveragedEulerStrategy",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:49"
          },
          {
            "label": "eulDistributor",
            "offset": 0,
            "slot": "214",
            "type": "t_contract(IEulDistributor)11782",
            "contract": "IdleLeveragedEulerStrategy",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:52"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "215",
            "type": "t_contract(ISwapRouter)10417",
            "contract": "IdleLeveragedEulerStrategy",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:55"
          },
          {
            "label": "path",
            "offset": 0,
            "slot": "216",
            "type": "t_bytes_storage",
            "contract": "IdleLeveragedEulerStrategy",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDToken)11681": {
            "label": "contract IDToken",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Detailed)9614": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IEToken)11764": {
            "label": "contract IEToken",
            "numberOfBytes": "20"
          },
          "t_contract(IEulDistributor)11782": {
            "label": "contract IEulDistributor",
            "numberOfBytes": "20"
          },
          "t_contract(ISwapRouter)10417": {
            "label": "contract ISwapRouter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "a3a160aa84a964e0ba7b0d313aa90bbe291faa10778194f48d2d7097c613b020": {
      "address": "0xB5a2492926815116B69fDB21A471a60CE79148DB",
      "txHash": "0xbff0175e9e2cc03e95b1075768fb0778f148f157e1c12fe449a5144e404a75b8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2006",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOLeveregedEulerVariant",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOLeveregedEulerVariant.sol:18"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2006": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9c9d240699aabf1f307e6195dee6c87474b8d1d7dbf27cce786643629dee3554": {
      "address": "0x96078F94375a81D28013B414b22683e66020eAe8",
      "txHash": "0x48b40941bb448bcb0286043233b90cc6e458b4d1a97612414093ae940dfc2402",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:27"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:30"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:33"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:36"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)9529",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:39"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:42"
          },
          {
            "label": "totalTokensStaked",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:45"
          },
          {
            "label": "totalTokensLocked",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:48"
          },
          {
            "label": "lastIndexedTime",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:51"
          },
          {
            "label": "latestHarvestBlock",
            "offset": 0,
            "slot": "210",
            "type": "t_uint128",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:55"
          },
          {
            "label": "lastApr",
            "offset": 16,
            "slot": "210",
            "type": "t_uint96",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:58"
          },
          {
            "label": "releaseBlocksPeriod",
            "offset": 28,
            "slot": "210",
            "type": "t_uint32",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:61"
          },
          {
            "label": "eToken",
            "offset": 0,
            "slot": "211",
            "type": "t_contract(IEToken)11679",
            "contract": "IdleLeveragedEulerStrategy",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:42"
          },
          {
            "label": "dToken",
            "offset": 0,
            "slot": "212",
            "type": "t_contract(IDToken)11596",
            "contract": "IdleLeveragedEulerStrategy",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:45"
          },
          {
            "label": "targetHealthScore",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "IdleLeveragedEulerStrategy",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:49"
          },
          {
            "label": "mintPrice",
            "offset": 0,
            "slot": "214",
            "type": "t_uint256",
            "contract": "IdleLeveragedEulerStrategy",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:52"
          },
          {
            "label": "eulDistributor",
            "offset": 0,
            "slot": "215",
            "type": "t_contract(IEulDistributor)11706",
            "contract": "IdleLeveragedEulerStrategy",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:55"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "216",
            "type": "t_contract(ISwapRouter)10332",
            "contract": "IdleLeveragedEulerStrategy",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:58"
          },
          {
            "label": "path",
            "offset": 0,
            "slot": "217",
            "type": "t_bytes_storage",
            "contract": "IdleLeveragedEulerStrategy",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IDToken)11596": {
            "label": "contract IDToken",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20Detailed)9529": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IEToken)11679": {
            "label": "contract IEToken",
            "numberOfBytes": "20"
          },
          "t_contract(IEulDistributor)11706": {
            "label": "contract IEulDistributor",
            "numberOfBytes": "20"
          },
          "t_contract(ISwapRouter)10332": {
            "label": "contract ISwapRouter",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "11c72ddd49297f526a168c0966df273104c6a900d94aafed862122d1105f0358": {
      "address": "0x5A62ca401667B18557Ef23d84bf27Aff5A0164cd",
      "txHash": "0x4322c043bddbae512420e8771859ce8ca5f0d03035247acc8e97e51be24f11bf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2537",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOLeveregedEulerVariant",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOLeveregedEulerVariant.sol:19"
          },
          {
            "contract": "IdleCDOLeveregedEulerVariant",
            "label": "lastAAPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOLeveregedEulerVariant.sol:20"
          },
          {
            "contract": "IdleCDOLeveregedEulerVariant",
            "label": "lastBBPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOLeveregedEulerVariant.sol:21"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2537": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "da5030c26000891cbb8e1adc70bf7525b3c8a89a66d1f760d9c116c3174d9d42": {
      "address": "0x7a77231Abe02359e0386DFEA3B47124E36d44A51",
      "txHash": "0x86180cf6446505ef799c83fba182905c3555b8c39b5b9f33947ff8596075c665",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/BaseStrategy.sol:27"
          },
          {
            "contract": "BaseStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/strategies/BaseStrategy.sol:30"
          },
          {
            "contract": "BaseStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/BaseStrategy.sol:33"
          },
          {
            "contract": "BaseStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/BaseStrategy.sol:36"
          },
          {
            "contract": "BaseStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)1456",
            "src": "contracts/strategies/BaseStrategy.sol:39"
          },
          {
            "contract": "BaseStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/BaseStrategy.sol:42"
          },
          {
            "contract": "BaseStrategy",
            "label": "totalTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/BaseStrategy.sol:45"
          },
          {
            "contract": "BaseStrategy",
            "label": "totalTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/BaseStrategy.sol:48"
          },
          {
            "contract": "BaseStrategy",
            "label": "lastIndexedTime",
            "type": "t_uint256",
            "src": "contracts/strategies/BaseStrategy.sol:51"
          },
          {
            "contract": "BaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint128",
            "src": "contracts/strategies/BaseStrategy.sol:55"
          },
          {
            "contract": "BaseStrategy",
            "label": "lastApr",
            "type": "t_uint96",
            "src": "contracts/strategies/BaseStrategy.sol:58"
          },
          {
            "contract": "BaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint32",
            "src": "contracts/strategies/BaseStrategy.sol:61"
          },
          {
            "contract": "IdleLeveragedEulerStrategy",
            "label": "eToken",
            "type": "t_contract(IEToken)1763",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:42"
          },
          {
            "contract": "IdleLeveragedEulerStrategy",
            "label": "dToken",
            "type": "t_contract(IDToken)1680",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:45"
          },
          {
            "contract": "IdleLeveragedEulerStrategy",
            "label": "targetHealthScore",
            "type": "t_uint256",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:49"
          },
          {
            "contract": "IdleLeveragedEulerStrategy",
            "label": "mintPrice",
            "type": "t_uint256",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:52"
          },
          {
            "contract": "IdleLeveragedEulerStrategy",
            "label": "eulDistributor",
            "type": "t_contract(IEulDistributor)1790",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:55"
          },
          {
            "contract": "IdleLeveragedEulerStrategy",
            "label": "router",
            "type": "t_contract(ISwapRouter)1629",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:58"
          },
          {
            "contract": "IdleLeveragedEulerStrategy",
            "label": "path",
            "type": "t_bytes_storage",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:61"
          },
          {
            "contract": "IdleLeveragedEulerStrategy",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:64"
          }
        ],
        "types": {
          "t_contract(IEToken)1763": {
            "label": "contract IEToken"
          },
          "t_contract(IDToken)1680": {
            "label": "contract IDToken"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IEulDistributor)1790": {
            "label": "contract IEulDistributor"
          },
          "t_contract(ISwapRouter)1629": {
            "label": "contract ISwapRouter"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20Detailed)1456": {
            "label": "contract IERC20Detailed"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "6732f5f4d9ff1ce5df3b8cf576f5051f02dc0a997cb10ee9661c96b15ea3f46d": {
      "address": "0x54449cD454ba2be50dc9d1aC9bb83a503c908D74",
      "txHash": "0x0a3f65acfb9ac45a1c6136376701525a83d8f8f95d79bee71d9f94194c589496",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BaseStrategy",
            "label": "token",
            "type": "t_address",
            "src": "contracts/strategies/BaseStrategy.sol:27"
          },
          {
            "contract": "BaseStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/strategies/BaseStrategy.sol:30"
          },
          {
            "contract": "BaseStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/strategies/BaseStrategy.sol:33"
          },
          {
            "contract": "BaseStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/strategies/BaseStrategy.sol:36"
          },
          {
            "contract": "BaseStrategy",
            "label": "underlyingToken",
            "type": "t_contract(IERC20Detailed)1456",
            "src": "contracts/strategies/BaseStrategy.sol:39"
          },
          {
            "contract": "BaseStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "contracts/strategies/BaseStrategy.sol:42"
          },
          {
            "contract": "BaseStrategy",
            "label": "totalTokensStaked",
            "type": "t_uint256",
            "src": "contracts/strategies/BaseStrategy.sol:45"
          },
          {
            "contract": "BaseStrategy",
            "label": "totalTokensLocked",
            "type": "t_uint256",
            "src": "contracts/strategies/BaseStrategy.sol:48"
          },
          {
            "contract": "BaseStrategy",
            "label": "lastIndexedTime",
            "type": "t_uint256",
            "src": "contracts/strategies/BaseStrategy.sol:51"
          },
          {
            "contract": "BaseStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint128",
            "src": "contracts/strategies/BaseStrategy.sol:55"
          },
          {
            "contract": "BaseStrategy",
            "label": "lastApr",
            "type": "t_uint96",
            "src": "contracts/strategies/BaseStrategy.sol:58"
          },
          {
            "contract": "BaseStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint32",
            "src": "contracts/strategies/BaseStrategy.sol:61"
          },
          {
            "contract": "IdleLeveragedEulerStrategy",
            "label": "eToken",
            "type": "t_contract(IEToken)1763",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:42"
          },
          {
            "contract": "IdleLeveragedEulerStrategy",
            "label": "dToken",
            "type": "t_contract(IDToken)1680",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:45"
          },
          {
            "contract": "IdleLeveragedEulerStrategy",
            "label": "targetHealthScore",
            "type": "t_uint256",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:49"
          },
          {
            "contract": "IdleLeveragedEulerStrategy",
            "label": "mintPrice",
            "type": "t_uint256",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:52"
          },
          {
            "contract": "IdleLeveragedEulerStrategy",
            "label": "eulDistributor",
            "type": "t_contract(IEulDistributor)1790",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:55"
          },
          {
            "contract": "IdleLeveragedEulerStrategy",
            "label": "router",
            "type": "t_contract(ISwapRouter)1629",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:58"
          },
          {
            "contract": "IdleLeveragedEulerStrategy",
            "label": "path",
            "type": "t_bytes_storage",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:61"
          },
          {
            "contract": "IdleLeveragedEulerStrategy",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/strategies/euler/IdleLeveragedEulerStrategy.sol:64"
          }
        ],
        "types": {
          "t_contract(IEToken)1763": {
            "label": "contract IEToken"
          },
          "t_contract(IDToken)1680": {
            "label": "contract IDToken"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IEulDistributor)1790": {
            "label": "contract IEulDistributor"
          },
          "t_contract(ISwapRouter)1629": {
            "label": "contract ISwapRouter"
          },
          "t_bytes_storage": {
            "label": "bytes"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(IERC20Detailed)1456": {
            "label": "contract IERC20Detailed"
          },
          "t_uint128": {
            "label": "uint128"
          },
          "t_uint96": {
            "label": "uint96"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "ea28224c2b1d170acbcc05c8cfd1058c8a84ba0f763a7af03494a1fb96bf6582": {
      "address": "0x8b39BbF63b8302EA75A08014B233c72127aAD670",
      "txHash": "0x8ddd9c2bd12252d480ee9a7f5e423f2d8679f744bd9c8ea6a7f409f69ccb8cc0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2534",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2534": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "27ca105ba8398bd0b54a3b4400138e5af05e835e36156c6762f185b214f44896": {
      "address": "0x4916eE4a761E5cFF5B4A3183f109F3E141a12569",
      "txHash": "0xcd2f61bd1b7869a827f326d95d6cdd33a310e103db681d33f5a5f0b497e83dda",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "IdlePoLidoStrategy",
            "src": "contracts/strategies/lido/IdlePoLidoStrategy.sol:26"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "IdlePoLidoStrategy",
            "src": "contracts/strategies/lido/IdlePoLidoStrategy.sol:28"
          },
          {
            "label": "whitelistedCDO",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "IdlePoLidoStrategy",
            "src": "contracts/strategies/lido/IdlePoLidoStrategy.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "9b10e567b06b4754202ac6a405fc26d427e9a2a5ffe752884206a7543560b535": {
      "address": "0x56050f117d675041DA6a4b501f0CB75D455759a1",
      "txHash": "0x3d2fbac2532ad1616ad2ac6fab96f25b9becd203f76d6aa66ce83b89b8cc6c9b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2152",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2152": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "49ad412c01d541e4ad0030e63ed2013fc641ebe84d2de056d5251df4c8ae3c10": {
      "address": "0x89a13b0BE966e53429372bc47721E336BEFCf347",
      "txHash": "0x72df5fccab42acb9fefcb5dfabea9ab1c1ceaa7bf4e374c4e8fbb28c5929f97f",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:25"
          },
          {
            "label": "cpToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:28"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:31"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:34"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)9872",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:37"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:40"
          },
          {
            "label": "govToken",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:46"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:49"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IUniswapV2Router02)5115",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)9872": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)5115": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "70cc3756fbc3a71343de3cd3935bbaee9c43709086e863c7b411b98d1792b9d8": {
      "address": "0xD6Ab3B405f1C6fE015E35258F7d77456B5CCD0dD",
      "txHash": "0xebacf7800a8c3394b3d5e512412dff368454e2948e59f796f60291b111ec55e3",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2006",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:108"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2006": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "06f812d1de3c671188cf986a5c8961990b4ee5198999902c13bb9a3efcd312d3": {
      "address": "0x6dF196928aCe3C98B12ff0769b3164753E5099AA",
      "txHash": "0xe41d58cacb6431f8903cd52365052d9f7af7ece62489915dd217764aca048cdf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2152",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:108"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/IdleCDOStorage.sol:126"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2152": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "6cb4508204578578e8e37ff86de75ca06996bc5ab3f5e975ac49ab64957c81f6": {
      "address": "0xAD6Cc71ef6bA82FFAd9Adf40220d035669EACB58",
      "txHash": "0xca1b2b6156cbd68b46ab42138d385bfb5206abf9953410285fcfb6ef134e8026",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2006",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:108"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts/IdleCDOStorage.sol:126"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2006": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          }
        }
      }
    },
    "4f2fca608ea68eec84f0d2e9cc7764c7d6d3d42ad39514d06aeb73e7161934fb": {
      "address": "0x051bA97B84a921f4134376aF2c7e3a38229B0933",
      "txHash": "0x3bad196fc7e16784fd28d5c57dd5779b832b429247a6f207c6e2db21fb749f4c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:25"
          },
          {
            "label": "cpToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:28"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:31"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:34"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)9974",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:37"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:40"
          },
          {
            "label": "govToken",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:46"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:49"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IUniswapV2Router02)5115",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)9974": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)5115": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "872a3dea181dda91e01c3343e1acde8ac5e9c5f0151c92ee342973830a387f8d": {
      "address": "0x263283a6B5aE1671d5c5dE75347a61aBc83fC16c",
      "txHash": "0x3b908e9c099e19db0a3fb9daf1d52699e115c57642dd78cd97f86ce931338c84",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:25"
          },
          {
            "label": "cpToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:28"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:31"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:34"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)1771",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:37"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:40"
          },
          {
            "label": "govToken",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:46"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:49"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IUniswapV2Router02)1750",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)1771": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)1750": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "204c368925c1fda8cd6298e0ca98c6b418438f006229ff624f71e3580c507e26": {
      "address": "0x0d41F858d803AF86E5192a77a798ad7d97E906CA",
      "txHash": "0xdb02ffd24f0c931423658d584cb178431b58a2afa1a28179dd5dabc71b390801",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleTokenFungible.sol:28"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleTokenFungible.sol:30"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "feeAddress",
            "type": "t_address",
            "src": "contracts/IdleTokenFungible.sol:32"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/IdleTokenFungible.sol:34"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "maxUnlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleTokenFungible.sol:36"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleTokenFungible.sol:38"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "allAvailableTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleTokenFungible.sol:40"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "lastAllocations",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/IdleTokenFungible.sol:43"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "protocolWrappers",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/IdleTokenFungible.sol:45"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "_minterBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleTokenFungible.sol:47"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "lastRebalancerAllocations",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/IdleTokenFungible.sol:55"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "lastNAV",
            "type": "t_uint256",
            "src": "contracts/IdleTokenFungible.sol:58"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleTokenFungible.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bf707142ae728c3824035ca9258c0857b049e1ec38c236f20342ee77266032cb": {
      "address": "0xCEC176D1E9B89E36B22031592Cb431Ab1C8846a0",
      "txHash": "0x3ac186f803cf5247c654643a730a4c506fa16e4bee83b8041178eee206fea200",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "IdleRebalancerHelperJunior",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)1349",
            "src": "contracts/utils/IdleRebalancerHelperJunior.sol:63"
          },
          {
            "contract": "IdleRebalancerHelperJunior",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/IdleRebalancerHelperJunior.sol:64"
          },
          {
            "contract": "IdleRebalancerHelperJunior",
            "label": "contractDatas",
            "type": "t_mapping(t_address,t_struct(ContractData)1471_storage)",
            "src": "contracts/utils/IdleRebalancerHelperJunior.sol:66"
          },
          {
            "contract": "IdleRebalancerHelperJunior",
            "label": "allContractDatas",
            "type": "t_array(t_struct(ContractData)1471_storage)dyn_storage",
            "src": "contracts/utils/IdleRebalancerHelperJunior.sol:67"
          }
        ],
        "types": {
          "t_contract(IUniswapV2Router02)1349": {
            "label": "contract IUniswapV2Router02"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(ContractData)1471_storage)": {
            "label": "mapping(address => struct IdleRebalancerHelperJunior.ContractData)"
          },
          "t_struct(ContractData)1471_storage": {
            "label": "struct IdleRebalancerHelperJunior.ContractData",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "protocolDatas",
                "type": "t_array(t_struct(ClearLikeData)1482_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(ClearLikeData)1482_storage)dyn_storage": {
            "label": "struct IdleRebalancerHelperJunior.ClearLikeData[]"
          },
          "t_struct(ClearLikeData)1482_storage": {
            "label": "struct IdleRebalancerHelperJunior.ClearLikeData",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "cdo",
                "type": "t_address"
              },
              {
                "label": "tranche",
                "type": "t_address"
              },
              {
                "label": "cpTokenLike",
                "type": "t_address"
              },
              {
                "label": "reward",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(ContractData)1471_storage)dyn_storage": {
            "label": "struct IdleRebalancerHelperJunior.ContractData[]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "bb3214282a3348c79fe756c2bb63eab136ec081910284b624d40c33e5016c124": {
      "address": "0x7600d5A837Bc8acEe5c6C5E564e681dDaDbE059F",
      "txHash": "0x132fb96eadaad23cd2faa556291563013a0118c7ae724f2e41ccbf94bc176179",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "uniswapRouter",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IUniswapV2Router02)12667",
            "contract": "IdleBuddyCompAave",
            "src": "contracts/utils/IdleBuddyCompAave.sol:95"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "IdleBuddyCompAave",
            "src": "contracts/utils/IdleBuddyCompAave.sol:96"
          },
          {
            "label": "contractDatas",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(ContractData)27752_storage)",
            "contract": "IdleBuddyCompAave",
            "src": "contracts/utils/IdleBuddyCompAave.sol:98"
          },
          {
            "label": "allContractDatas",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(ContractData)27752_storage)dyn_storage",
            "contract": "IdleBuddyCompAave",
            "src": "contracts/utils/IdleBuddyCompAave.sol:99"
          },
          {
            "label": "providerV2",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(AaveLendingPoolProviderV2)12882",
            "contract": "IdleBuddyCompAave",
            "src": "contracts/utils/IdleBuddyCompAave.sol:101"
          },
          {
            "label": "comptroller",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "IdleBuddyCompAave",
            "src": "contracts/utils/IdleBuddyCompAave.sol:102"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "IdleBuddyCompAave",
            "src": "contracts/utils/IdleBuddyCompAave.sol:103"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(ClearLikeData)27763_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAave.ClearLikeData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ContractData)27752_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAave.ContractData[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AaveLendingPoolProviderV2)12882": {
            "label": "contract AaveLendingPoolProviderV2",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)12667": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(ContractData)27752_storage)": {
            "label": "mapping(address => struct IdleBuddyCompAave.ContractData)",
            "numberOfBytes": "32"
          },
          "t_struct(ClearLikeData)27763_storage": {
            "label": "struct IdleBuddyCompAave.ClearLikeData",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cdo",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tranche",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cpTokenLike",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reward",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ContractData)27752_storage": {
            "label": "struct IdleBuddyCompAave.ContractData",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "underlying",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "protocolDatas",
                "type": "t_array(t_struct(ClearLikeData)27763_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cTokenNew",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "aV2Token",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          }
        }
      }
    },
    "44b3ee6df4a5c0cc06b93e4e9e6e48d4802d61554fd2033a7def7edb5cd8df32": {
      "address": "0x43e744991c4dB0A830A396EeEEc21c19D6E25FC3",
      "txHash": "0xae1466bd36fa6bacadf2dee1ac1701e0d4b3ce1fc980e2c30b9ce75f9c2000b5",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "uniswapRouter",
            "offset": 2,
            "slot": "0",
            "type": "t_contract(IUniswapV2Router02)12667",
            "contract": "IdleBuddyCompAave",
            "src": "contracts/utils/IdleBuddyCompAave.sol:98"
          },
          {
            "label": "owner",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "IdleBuddyCompAave",
            "src": "contracts/utils/IdleBuddyCompAave.sol:99"
          },
          {
            "label": "contractDatas",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(ContractData)27757_storage)",
            "contract": "IdleBuddyCompAave",
            "src": "contracts/utils/IdleBuddyCompAave.sol:101"
          },
          {
            "label": "allContractDatas",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_struct(ContractData)27757_storage)dyn_storage",
            "contract": "IdleBuddyCompAave",
            "src": "contracts/utils/IdleBuddyCompAave.sol:102"
          },
          {
            "label": "providerV2",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(AaveLendingPoolProviderV2)12882",
            "contract": "IdleBuddyCompAave",
            "src": "contracts/utils/IdleBuddyCompAave.sol:104"
          },
          {
            "label": "comptroller",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "IdleBuddyCompAave",
            "src": "contracts/utils/IdleBuddyCompAave.sol:105"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "6",
            "type": "t_address",
            "contract": "IdleBuddyCompAave",
            "src": "contracts/utils/IdleBuddyCompAave.sol:106"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(ClearLikeData)27768_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAave.ClearLikeData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(ContractData)27757_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAave.ContractData[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AaveLendingPoolProviderV2)12882": {
            "label": "contract AaveLendingPoolProviderV2",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)12667": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(ContractData)27757_storage)": {
            "label": "mapping(address => struct IdleBuddyCompAave.ContractData)",
            "numberOfBytes": "32"
          },
          "t_struct(ClearLikeData)27768_storage": {
            "label": "struct IdleBuddyCompAave.ClearLikeData",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cdo",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "tranche",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cpTokenLike",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reward",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(ContractData)27757_storage": {
            "label": "struct IdleBuddyCompAave.ContractData",
            "members": [
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "underlying",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "protocolDatas",
                "type": "t_array(t_struct(ClearLikeData)27768_storage)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "cTokenNew",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "aV2Token",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          }
        }
      }
    },
    "d3cc0293eca65463a570173e2c54f11eb28dd8a05cf242957e75c7c675af14db": {
      "address": "0x55Cf2CF79759574A4E868ab83701794AfC5A6a06",
      "txHash": "0xf4d07fc15195a4d8ef584b42db0599ab008953f711b999d902cc21e482ce2ad1",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:27"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:30"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:33"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:36"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)12632",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:39"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:42"
          },
          {
            "label": "totalTokensStaked",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:45"
          },
          {
            "label": "totalTokensLocked",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:48"
          },
          {
            "label": "lastIndexedTime",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:51"
          },
          {
            "label": "latestHarvestBlock",
            "offset": 0,
            "slot": "210",
            "type": "t_uint128",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:55"
          },
          {
            "label": "lastApr",
            "offset": 16,
            "slot": "210",
            "type": "t_uint96",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:58"
          },
          {
            "label": "releaseBlocksPeriod",
            "offset": 28,
            "slot": "210",
            "type": "t_uint32",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:61"
          },
          {
            "label": "eToken",
            "offset": 0,
            "slot": "211",
            "type": "t_contract(IEToken)15866",
            "contract": "IdleEulerStakingStrategy",
            "src": "contracts/strategies/euler/IdleEulerStakingStrategy.sol:39"
          },
          {
            "label": "stakingRewards",
            "offset": 0,
            "slot": "212",
            "type": "t_contract(IStakingRewards)14123",
            "contract": "IdleEulerStakingStrategy",
            "src": "contracts/strategies/euler/IdleEulerStakingStrategy.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)12632": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IEToken)15866": {
            "label": "contract IEToken",
            "numberOfBytes": "20"
          },
          "t_contract(IStakingRewards)14123": {
            "label": "contract IStakingRewards",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "a28da65e65c138de1a9b7c421fb838c7d836ed33339dacdc7b1d51390015522d": {
      "address": "0x742Cf09D89DD80494Cc106ea737163436b0bCb68",
      "txHash": "0x45a4eaeb993e337aa72f6f42b503f1a4b6d3d2647f09a95765a7dba7e2b1e3b9",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:28"
          },
          {
            "label": "rebalancer",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:30"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:32"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:34"
          },
          {
            "label": "maxUnlentPerc",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:36"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:38"
          },
          {
            "label": "allAvailableTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:40"
          },
          {
            "label": "lastAllocations",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:43"
          },
          {
            "label": "protocolWrappers",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_address)",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:45"
          },
          {
            "label": "_minterBlock",
            "offset": 0,
            "slot": "260",
            "type": "t_bytes32",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:47"
          },
          {
            "label": "lastRebalancerAllocations",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:55"
          },
          {
            "label": "lastNAV",
            "offset": 0,
            "slot": "262",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:58"
          },
          {
            "label": "unclaimedFees",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "df640172cd4a6d464da42c5a2379d2d7955da916bc8957842e5df8a309b7d463": {
      "address": "0xEDA9f23294473D69F0943744925a8bE9c1FC354F",
      "txHash": "0x912874e896d0fc9f43e08fff237d25972afaeca0ce7d8ba0be9c3cb67073e955",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:22"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:25"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:28"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:31"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Detailed)14510",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:34"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:37"
          },
          {
            "label": "AAVE_LENS",
            "offset": 0,
            "slot": "157",
            "type": "t_contract(IMorphoAaveV2Lens)18016",
            "contract": "MorphoSupplyVaultStrategy",
            "src": "contracts/strategies/morpho/MorphoSupplyVaultStrategy.sol:14"
          },
          {
            "label": "COMPOUND_LENS",
            "offset": 0,
            "slot": "158",
            "type": "t_contract(IMorphoCompoundLens)18031",
            "contract": "MorphoSupplyVaultStrategy",
            "src": "contracts/strategies/morpho/MorphoSupplyVaultStrategy.sol:16"
          },
          {
            "label": "poolToken",
            "offset": 0,
            "slot": "159",
            "type": "t_address",
            "contract": "MorphoSupplyVaultStrategy",
            "src": "contracts/strategies/morpho/MorphoSupplyVaultStrategy.sol:19"
          },
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "160",
            "type": "t_address",
            "contract": "MorphoSupplyVaultStrategy",
            "src": "contracts/strategies/morpho/MorphoSupplyVaultStrategy.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)14510": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IMorphoAaveV2Lens)18016": {
            "label": "contract IMorphoAaveV2Lens",
            "numberOfBytes": "20"
          },
          "t_contract(IMorphoCompoundLens)18031": {
            "label": "contract IMorphoCompoundLens",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "777a919bea5be8f8a4800332f6ccaa3209cae3e4eb3207db13a5f46c1d04802a": {
      "address": "0x0cB45D9790e7F335b491C9532f7ad15aa1A9dFAc",
      "txHash": "0x5ca8473d40b61bd2c3f8f1dfe946e2b663cc4b8c23df4c466b4e37e2ad50b554",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:22"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:25"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:28"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:31"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Detailed)14992",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:34"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:37"
          },
          {
            "label": "AAVE_LENS",
            "offset": 0,
            "slot": "157",
            "type": "t_contract(IMorphoAaveV2Lens)18620",
            "contract": "MorphoSupplyVaultStrategy",
            "src": "contracts/strategies/morpho/MorphoSupplyVaultStrategy.sol:14"
          },
          {
            "label": "COMPOUND_LENS",
            "offset": 0,
            "slot": "158",
            "type": "t_contract(IMorphoCompoundLens)18635",
            "contract": "MorphoSupplyVaultStrategy",
            "src": "contracts/strategies/morpho/MorphoSupplyVaultStrategy.sol:16"
          },
          {
            "label": "poolToken",
            "offset": 0,
            "slot": "159",
            "type": "t_address",
            "contract": "MorphoSupplyVaultStrategy",
            "src": "contracts/strategies/morpho/MorphoSupplyVaultStrategy.sol:19"
          },
          {
            "label": "rewardToken",
            "offset": 0,
            "slot": "160",
            "type": "t_address",
            "contract": "MorphoSupplyVaultStrategy",
            "src": "contracts/strategies/morpho/MorphoSupplyVaultStrategy.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)14992": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IMorphoAaveV2Lens)18620": {
            "label": "contract IMorphoAaveV2Lens",
            "numberOfBytes": "20"
          },
          "t_contract(IMorphoCompoundLens)18635": {
            "label": "contract IMorphoCompoundLens",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "66abef499bcacff698ef40cda7990e044d25eb3ccefdab6324dd9b29558ca877": {
      "address": "0xD408Ee2366b4D8B8Eac50A41a05c5Dbc1cE9fb50",
      "txHash": "0x6b20446b1e80e047084454f8d3c81776501493aff7d7c9465a011c321f611850",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "IdlePoLidoStrategy",
            "src": "contracts/strategies/lido/IdlePoLidoStrategy.sol:26"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "IdlePoLidoStrategy",
            "src": "contracts/strategies/lido/IdlePoLidoStrategy.sol:28"
          },
          {
            "label": "whitelistedCDO",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "IdlePoLidoStrategy",
            "src": "contracts/strategies/lido/IdlePoLidoStrategy.sol:42"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "da9ca70aeeca36991dd4c27551cbd9d79b9919d2b8310c9f7ba0a98ae6c9e8aa": {
      "address": "0xFcBd5b780109F030b71286aB59f187e4287aa358",
      "txHash": "0x59c554a780ccd1220be461919d4b8eeef9109120ca90e8c052ead256265a870b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:27"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:30"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:33"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:36"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)2157",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:39"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:42"
          },
          {
            "label": "totalTokensStaked",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:45"
          },
          {
            "label": "totalTokensLocked",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:48"
          },
          {
            "label": "lastIndexedTime",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:51"
          },
          {
            "label": "latestHarvestBlock",
            "offset": 0,
            "slot": "210",
            "type": "t_uint128",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:55"
          },
          {
            "label": "lastApr",
            "offset": 16,
            "slot": "210",
            "type": "t_uint96",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:58"
          },
          {
            "label": "releaseBlocksPeriod",
            "offset": 28,
            "slot": "210",
            "type": "t_uint32",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:61"
          },
          {
            "label": "eToken",
            "offset": 0,
            "slot": "211",
            "type": "t_contract(IEToken)2459",
            "contract": "IdleEulerStakingStrategy",
            "src": "contracts/strategies/euler/IdleEulerStakingStrategy.sol:39"
          },
          {
            "label": "stakingRewards",
            "offset": 0,
            "slot": "212",
            "type": "t_contract(IStakingRewards)2339",
            "contract": "IdleEulerStakingStrategy",
            "src": "contracts/strategies/euler/IdleEulerStakingStrategy.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)2157": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IEToken)2459": {
            "label": "contract IEToken",
            "numberOfBytes": "20"
          },
          "t_contract(IStakingRewards)2339": {
            "label": "contract IStakingRewards",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "af3d760be102e87483597d87da8e66797ee7101e50ccc5fa895056c77d56f95f": {
      "address": "0x956f650177F95ef142aa2a26DA407Ad014cf5784",
      "txHash": "0x47801fe04c6fff2436ce0975976b63e13ddb8eb4a0457cc69b2d88363a893265",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:27"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:30"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:33"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:36"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)2157",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:39"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:42"
          },
          {
            "label": "totalTokensStaked",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:45"
          },
          {
            "label": "totalTokensLocked",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:48"
          },
          {
            "label": "lastIndexedTime",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:51"
          },
          {
            "label": "latestHarvestBlock",
            "offset": 0,
            "slot": "210",
            "type": "t_uint128",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:55"
          },
          {
            "label": "lastApr",
            "offset": 16,
            "slot": "210",
            "type": "t_uint96",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:58"
          },
          {
            "label": "releaseBlocksPeriod",
            "offset": 28,
            "slot": "210",
            "type": "t_uint32",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:61"
          },
          {
            "label": "eToken",
            "offset": 0,
            "slot": "211",
            "type": "t_contract(IEToken)2459",
            "contract": "IdleEulerStakingStrategy",
            "src": "contracts/strategies/euler/IdleEulerStakingStrategy.sol:39"
          },
          {
            "label": "stakingRewards",
            "offset": 0,
            "slot": "212",
            "type": "t_contract(IStakingRewards)2339",
            "contract": "IdleEulerStakingStrategy",
            "src": "contracts/strategies/euler/IdleEulerStakingStrategy.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)2157": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IEToken)2459": {
            "label": "contract IEToken",
            "numberOfBytes": "20"
          },
          "t_contract(IStakingRewards)2339": {
            "label": "contract IStakingRewards",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "710c9fd195ea86e9ce0ec08bba90f00c60e9a59d4a5dee7e71a3b7f3cc8f9e54": {
      "address": "0xEE76293d97f0613849603090cC75Aa97e3Cf5e7B",
      "txHash": "0x7e701cbd45e115e474b73d24c720dac11807699bdaa0a55472739e9e290baa50",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:27"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:30"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:33"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:36"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)16256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:39"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:42"
          },
          {
            "label": "totalTokensStaked",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:45"
          },
          {
            "label": "totalTokensLocked",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:48"
          },
          {
            "label": "lastIndexedTime",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:51"
          },
          {
            "label": "latestHarvestBlock",
            "offset": 0,
            "slot": "210",
            "type": "t_uint128",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:55"
          },
          {
            "label": "lastApr",
            "offset": 16,
            "slot": "210",
            "type": "t_uint96",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:58"
          },
          {
            "label": "releaseBlocksPeriod",
            "offset": 28,
            "slot": "210",
            "type": "t_uint32",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:61"
          },
          {
            "label": "eToken",
            "offset": 0,
            "slot": "211",
            "type": "t_contract(IEToken)19522",
            "contract": "IdleEulerStakingStrategy",
            "src": "contracts/strategies/euler/IdleEulerStakingStrategy.sol:39"
          },
          {
            "label": "stakingRewards",
            "offset": 0,
            "slot": "212",
            "type": "t_contract(IStakingRewards)17756",
            "contract": "IdleEulerStakingStrategy",
            "src": "contracts/strategies/euler/IdleEulerStakingStrategy.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)16256": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IEToken)19522": {
            "label": "contract IEToken",
            "numberOfBytes": "20"
          },
          "t_contract(IStakingRewards)17756": {
            "label": "contract IStakingRewards",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "2ebe9fde3c34c7c162c59e27594ae67cfbf8cca2bb236b5019168ea3c9429548": {
      "address": "0x96697656FC6bED7ebdC0310dA9308599CE2BBbff",
      "txHash": "0x328c844f14365373cad9e5b08bb72fb5178bbd80746441ff3a81d4f8c380e2ef",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:66"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "contractDatas",
            "type": "t_mapping(t_address,t_struct(ContractData)7403_storage)",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:68"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "allContractDatas",
            "type": "t_array(t_struct(ContractData)7403_storage)dyn_storage",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(ContractData)7403_storage)": {
            "label": "mapping(address => struct IdleBuddyCompAavePYTStructs.ContractData)"
          },
          "t_struct(ContractData)7403_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData",
            "members": [
              {
                "label": "underlying",
                "type": "t_address"
              },
              {
                "label": "cTokenNew",
                "type": "t_address"
              },
              {
                "label": "aV2Token",
                "type": "t_address"
              },
              {
                "label": "eToken",
                "type": "t_address"
              },
              {
                "label": "maToken",
                "type": "t_address"
              },
              {
                "label": "pytClearWinTranche",
                "type": "t_address"
              },
              {
                "label": "pytEulerStakingTranche",
                "type": "t_address"
              },
              {
                "label": "pytMorphoAaveTranche",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(ContractData)7403_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData[]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "02d8a24d065fb568df1b0a58e9d3903fc3c7d466440f3b0cbc4c45bae2120dd6": {
      "address": "0x3b43870ABF343AA999997F97e48648557301Fcb2",
      "txHash": "0x9ae6fd8eef9ad63affc4cbde6354d010fded9fa867d9855dc5b9001d445a4383",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "IdleLidoStrategy",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:28"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "IdleLidoStrategy",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:30"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "IdleLidoStrategy",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:32"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "IdleLidoStrategy",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:34"
          },
          {
            "label": "lido",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(ILido)15894",
            "contract": "IdleLidoStrategy",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:37"
          },
          {
            "label": "whitelistedCDO",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "IdleLidoStrategy",
            "src": "contracts/strategies/lido/IdleLidoStrategy.sol:39"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ILido)15894": {
            "label": "contract ILido",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "a7b35a45ec12ef06e533106920e6598c7a93c68c5d84d59d823599b1573fc329": {
      "address": "0x46DE3A3dA932F1CbC151Db76AC1BeE935611544e",
      "txHash": "0x1aab96efcd488d3379d354c2a7760417a18da5dfa3edb620dbf5b84291d5244d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2006",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:108"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:114"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "contracts/IdleCDOStorage.sol:128"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2006": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1370dafec95e9ab0f2be042cbdc52080e8e568cbfbbd977b21371a0d8778a130": {
      "address": "0x1fC957B768b2f7F4a035bc861ED89e9c7cc01c0e",
      "txHash": "0xac3a11bd36db876f2a84aa986b91c66b8a3a3ce1ea41383ce61dd77be77815db",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:28"
          },
          {
            "label": "rebalancer",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:30"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:32"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:34"
          },
          {
            "label": "maxUnlentPerc",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:36"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:38"
          },
          {
            "label": "allAvailableTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:40"
          },
          {
            "label": "lastAllocations",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:43"
          },
          {
            "label": "protocolWrappers",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_address)",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:45"
          },
          {
            "label": "_minterBlock",
            "offset": 0,
            "slot": "260",
            "type": "t_bytes32",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:47"
          },
          {
            "label": "lastRebalancerAllocations",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:55"
          },
          {
            "label": "lastNAV",
            "offset": 0,
            "slot": "262",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:58"
          },
          {
            "label": "unclaimedFees",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "e42ebae86bd6606df8d2570121259c09c7b7b632148a7e01dacf6da964b2e6fc": {
      "address": "0x169e448BFf1fA74c9Be3FE4dADB14434dCFF692f",
      "txHash": "0x5ef7dfc8f7f46e5a8dad4417f393fb932520303a070e462b53b1f7f4708c3913",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:28"
          },
          {
            "label": "rebalancer",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:30"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:32"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:34"
          },
          {
            "label": "maxUnlentPerc",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:36"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:38"
          },
          {
            "label": "allAvailableTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:40"
          },
          {
            "label": "lastAllocations",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:43"
          },
          {
            "label": "protocolWrappers",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_address)",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:45"
          },
          {
            "label": "_minterBlock",
            "offset": 0,
            "slot": "260",
            "type": "t_bytes32",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:47"
          },
          {
            "label": "lastRebalancerAllocations",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:55"
          },
          {
            "label": "lastNAV",
            "offset": 0,
            "slot": "262",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:58"
          },
          {
            "label": "unclaimedFees",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "49229f475109b17fcedb3d65b847dc97ac8c0d8311cbc45edc3d9cf3a5bf789f": {
      "address": "0x1247B148062179Cd6156f68d9A1019F671F955c1",
      "txHash": "0x6dbda5ae5e63f2803c48b7e398072e2fad9be299aa03a4cf9ca263de543fedf9",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:28"
          },
          {
            "label": "rebalancer",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:30"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:32"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:34"
          },
          {
            "label": "maxUnlentPerc",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:36"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:38"
          },
          {
            "label": "allAvailableTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:40"
          },
          {
            "label": "lastAllocations",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:43"
          },
          {
            "label": "protocolWrappers",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_address)",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:45"
          },
          {
            "label": "_minterBlock",
            "offset": 0,
            "slot": "260",
            "type": "t_bytes32",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:47"
          },
          {
            "label": "lastRebalancerAllocations",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:55"
          },
          {
            "label": "lastNAV",
            "offset": 0,
            "slot": "262",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:58"
          },
          {
            "label": "unclaimedFees",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "72c044cf51ea085d5d99ee5a50eb3300b52ff30393506ecd786356c5fa763051": {
      "address": "0xBdbc6d788D8090D3b72C6d5A1F763D5b56EEb907",
      "txHash": "0x8d6845ca6ee355be4e1df64693cc2d1a293d23f08e1d2dc39a6b95976660d07b",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:29"
          },
          {
            "label": "rebalancer",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:31"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:33"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:35"
          },
          {
            "label": "maxUnlentPerc",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:37"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:39"
          },
          {
            "label": "allAvailableTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:41"
          },
          {
            "label": "lastAllocations",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:44"
          },
          {
            "label": "protocolWrappers",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_address)",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:46"
          },
          {
            "label": "_minterBlock",
            "offset": 0,
            "slot": "260",
            "type": "t_bytes32",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:48"
          },
          {
            "label": "lastRebalancerAllocations",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:56"
          },
          {
            "label": "lastNAV",
            "offset": 0,
            "slot": "262",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:59"
          },
          {
            "label": "unclaimedFees",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:61"
          },
          {
            "label": "skipRedeemMinAmount",
            "offset": 0,
            "slot": "264",
            "type": "t_bool",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "7debcf8c998ddc0a62695875e6892782fd4c8dd3d3b998c75e17dcf3d5fccfae": {
      "address": "0xb51BE9Eea9cbeEFE2fe7AC2161aCE58444C294e5",
      "txHash": "0x55dee45637deeb1146e35f8ad6490a3f585e9f8fd2522628bc96c3d17015107d",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:27"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:30"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:33"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:36"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)2157",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:39"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:42"
          },
          {
            "label": "totalTokensStaked",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:45"
          },
          {
            "label": "totalTokensLocked",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:48"
          },
          {
            "label": "lastIndexedTime",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:51"
          },
          {
            "label": "latestHarvestBlock",
            "offset": 0,
            "slot": "210",
            "type": "t_uint128",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:55"
          },
          {
            "label": "lastApr",
            "offset": 16,
            "slot": "210",
            "type": "t_uint96",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:58"
          },
          {
            "label": "releaseBlocksPeriod",
            "offset": 28,
            "slot": "210",
            "type": "t_uint32",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:61"
          },
          {
            "label": "eToken",
            "offset": 0,
            "slot": "211",
            "type": "t_contract(IEToken)2459",
            "contract": "IdleEulerStakingStrategy",
            "src": "contracts/strategies/euler/IdleEulerStakingStrategy.sol:39"
          },
          {
            "label": "stakingRewards",
            "offset": 0,
            "slot": "212",
            "type": "t_contract(IStakingRewards)2339",
            "contract": "IdleEulerStakingStrategy",
            "src": "contracts/strategies/euler/IdleEulerStakingStrategy.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)2157": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IEToken)2459": {
            "label": "contract IEToken",
            "numberOfBytes": "20"
          },
          "t_contract(IStakingRewards)2339": {
            "label": "contract IStakingRewards",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "10377787b10aa5d2fadd1307d54f9674b160438cc4f6fce030422e98e3499ad9": {
      "address": "0x9d6F65f2fFE08158a00793Bf62c62b43629117B5",
      "txHash": "0x91be49f1fd7b93d495ad281a838cfcde59f95fbe2116c63a813bb926d78a22c4",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:27"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:30"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:33"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:36"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)16256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:39"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:42"
          },
          {
            "label": "totalTokensStaked",
            "offset": 0,
            "slot": "207",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:45"
          },
          {
            "label": "totalTokensLocked",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:48"
          },
          {
            "label": "lastIndexedTime",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:51"
          },
          {
            "label": "latestHarvestBlock",
            "offset": 0,
            "slot": "210",
            "type": "t_uint128",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:55"
          },
          {
            "label": "lastApr",
            "offset": 16,
            "slot": "210",
            "type": "t_uint96",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:58"
          },
          {
            "label": "releaseBlocksPeriod",
            "offset": 28,
            "slot": "210",
            "type": "t_uint32",
            "contract": "BaseStrategy",
            "src": "contracts/strategies/BaseStrategy.sol:61"
          },
          {
            "label": "eToken",
            "offset": 0,
            "slot": "211",
            "type": "t_contract(IEToken)19522",
            "contract": "IdleEulerStakingStrategy",
            "src": "contracts/strategies/euler/IdleEulerStakingStrategy.sol:39"
          },
          {
            "label": "stakingRewards",
            "offset": 0,
            "slot": "212",
            "type": "t_contract(IStakingRewards)17756",
            "contract": "IdleEulerStakingStrategy",
            "src": "contracts/strategies/euler/IdleEulerStakingStrategy.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)16256": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IEToken)19522": {
            "label": "contract IEToken",
            "numberOfBytes": "20"
          },
          "t_contract(IStakingRewards)17756": {
            "label": "contract IStakingRewards",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "752cee6813b8db622fa0ceadf74b088b77aefaea953e8d36c2313e2e45786661": {
      "address": "0x6963460d921407E4dB82a72837a1e709aC7a0d25",
      "txHash": "0x46ecc1bb7f643be27cc19b20a5ca9e1eb5a874eeabbf52d54189476c1c8c93ac",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:25"
          },
          {
            "label": "cpToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:28"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:31"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:34"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)18764",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:37"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:40"
          },
          {
            "label": "govToken",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:46"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:49"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IUniswapV2Router02)5195",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)18764": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)5195": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "17c39e08a4f87aa770fcc1a6f49cae1e0ac3e14c97ef29985a0bb67ce12cb961": {
      "address": "0xfAf843F864DDA372Be21B28b03DC0A339AF090Ac",
      "txHash": "0x023596e7bb9f6f499eb49bd5206fa469d500ae391af2c73b829247ae13848b28",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:66"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "contractDatas",
            "type": "t_mapping(t_address,t_struct(ContractData)7657_storage)",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:68"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "allContractDatas",
            "type": "t_array(t_struct(ContractData)7657_storage)dyn_storage",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:69"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "isEulerDisabled",
            "type": "t_bool",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(ContractData)7657_storage)": {
            "label": "mapping(address => struct IdleBuddyCompAavePYTStructs.ContractData)"
          },
          "t_struct(ContractData)7657_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData",
            "members": [
              {
                "label": "underlying",
                "type": "t_address"
              },
              {
                "label": "cTokenNew",
                "type": "t_address"
              },
              {
                "label": "aV2Token",
                "type": "t_address"
              },
              {
                "label": "eToken",
                "type": "t_address"
              },
              {
                "label": "maToken",
                "type": "t_address"
              },
              {
                "label": "pytClearWinTranche",
                "type": "t_address"
              },
              {
                "label": "pytEulerStakingTranche",
                "type": "t_address"
              },
              {
                "label": "pytMorphoAaveTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearPorTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearFasTranche",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(ContractData)7657_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData[]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "93f1e624e49e6eaf6aa6a71ff2d46c49173b2670a04c71126193683220db5702": {
      "address": "0xE6FF21224b386Ae7eB162bBf973E1DFB471a6eD5",
      "txHash": "0xf5c1a32c9cb9fa4e635b8d1db7587d6b77fd89b803f100ed9988d4ca7b7475f7",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:66"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "contractDatas",
            "type": "t_mapping(t_address,t_struct(ContractData)7703_storage)",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:68"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "allContractDatas",
            "type": "t_array(t_struct(ContractData)7703_storage)dyn_storage",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:69"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "isEulerDisabled",
            "type": "t_bool",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:71"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(ContractData)7703_storage)": {
            "label": "mapping(address => struct IdleBuddyCompAavePYTStructs.ContractData)"
          },
          "t_struct(ContractData)7703_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData",
            "members": [
              {
                "label": "underlying",
                "type": "t_address"
              },
              {
                "label": "cTokenNew",
                "type": "t_address"
              },
              {
                "label": "aV2Token",
                "type": "t_address"
              },
              {
                "label": "eToken",
                "type": "t_address"
              },
              {
                "label": "maToken",
                "type": "t_address"
              },
              {
                "label": "pytClearWinTranche",
                "type": "t_address"
              },
              {
                "label": "pytEulerStakingTranche",
                "type": "t_address"
              },
              {
                "label": "pytMorphoAaveTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearPorTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearFasTranche",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(ContractData)7703_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData[]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "94247a38e02b3a282a91317b2207a5dd4ceec5162d6fcedd4ce815761d0a743e": {
      "address": "0xA9b29062aBF9bfa213c63440955f5DE091Ad541F",
      "txHash": "0xfef82738c9ef1dfbcbf9bad36d5bdebe4bf44fd29bd94411f84751c68cd1535e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:70"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "contractDatas",
            "type": "t_mapping(t_address,t_struct(ContractData)7163_storage)",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:72"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "allContractDatas",
            "type": "t_array(t_struct(ContractData)7163_storage)dyn_storage",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:73"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "isEulerDisabled",
            "type": "t_bool",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:75"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(ContractData)7163_storage)": {
            "label": "mapping(address => struct IdleBuddyCompAavePYTStructs.ContractData)"
          },
          "t_struct(ContractData)7163_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData",
            "members": [
              {
                "label": "underlying",
                "type": "t_address"
              },
              {
                "label": "cTokenNew",
                "type": "t_address"
              },
              {
                "label": "aV2Token",
                "type": "t_address"
              },
              {
                "label": "eToken",
                "type": "t_address"
              },
              {
                "label": "maToken",
                "type": "t_address"
              },
              {
                "label": "pytClearWinTranche",
                "type": "t_address"
              },
              {
                "label": "pytEulerStakingTranche",
                "type": "t_address"
              },
              {
                "label": "pytMorphoAaveTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearPorTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearFasTranche",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(ContractData)7163_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData[]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "cb4fcc592cb5744cf9e7ce26b55a266b637749f9f83f55b34ceccebf338570f8": {
      "address": "0x95CC93B8eB5A2b56932B04dA50a9eA43b287663a",
      "txHash": "0x0f59d50c98b1796bdbbee88160afe52f8878be067e4868ed0505de2554d0b098",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:72"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "contractDatas",
            "type": "t_mapping(t_address,t_struct(ContractData)7200_storage)",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:74"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "allContractDatas",
            "type": "t_array(t_struct(ContractData)7200_storage)dyn_storage",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:75"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "isEulerDisabled",
            "type": "t_bool",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(ContractData)7200_storage)": {
            "label": "mapping(address => struct IdleBuddyCompAavePYTStructs.ContractData)"
          },
          "t_struct(ContractData)7200_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData",
            "members": [
              {
                "label": "underlying",
                "type": "t_address"
              },
              {
                "label": "cTokenNew",
                "type": "t_address"
              },
              {
                "label": "aV2Token",
                "type": "t_address"
              },
              {
                "label": "eToken",
                "type": "t_address"
              },
              {
                "label": "maToken",
                "type": "t_address"
              },
              {
                "label": "pytClearWinTranche",
                "type": "t_address"
              },
              {
                "label": "pytEulerStakingTranche",
                "type": "t_address"
              },
              {
                "label": "pytMorphoAaveTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearPorTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearFasTranche",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(ContractData)7200_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData[]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "899b14d909f5ab8d1cb520ead36b832994244afb41d71ddf37c271205befcef8": {
      "address": "0xBb9Fd2de55943C88EC2238FB36a345E3F612284f",
      "txHash": "0x25e6e8a8c38082417ea0c00f05ec2d928d709a19564f9c993c37d88815f77b30",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:72"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "contractDatas",
            "type": "t_mapping(t_address,t_struct(ContractData)7213_storage)",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:74"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "allContractDatas",
            "type": "t_array(t_struct(ContractData)7213_storage)dyn_storage",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:75"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "isEulerDisabled",
            "type": "t_bool",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(ContractData)7213_storage)": {
            "label": "mapping(address => struct IdleBuddyCompAavePYTStructs.ContractData)"
          },
          "t_struct(ContractData)7213_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData",
            "members": [
              {
                "label": "underlying",
                "type": "t_address"
              },
              {
                "label": "cTokenNew",
                "type": "t_address"
              },
              {
                "label": "aV2Token",
                "type": "t_address"
              },
              {
                "label": "eToken",
                "type": "t_address"
              },
              {
                "label": "maToken",
                "type": "t_address"
              },
              {
                "label": "pytClearWinTranche",
                "type": "t_address"
              },
              {
                "label": "pytEulerStakingTranche",
                "type": "t_address"
              },
              {
                "label": "pytMorphoAaveTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearPorTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearFasTranche",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(ContractData)7213_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData[]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "197074ac8f045a5657cfbea45da5e5419d4bdb8af4a77355bee961063a1ecd75": {
      "address": "0x5b3d6c553e52f8B3fc7CB4a4C67e479C2Ce0A7C1",
      "txHash": "0x3fed64b0c6eff47493fd3c45d08d317d677b6ef78e88f697ed5dcabc5105894a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:72"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "contractDatas",
            "type": "t_mapping(t_address,t_struct(ContractData)7311_storage)",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:74"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "allContractDatas",
            "type": "t_array(t_struct(ContractData)7311_storage)dyn_storage",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:75"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "isEulerDisabled",
            "type": "t_bool",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:77"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "maxClearUR",
            "type": "t_uint256",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(ContractData)7311_storage)": {
            "label": "mapping(address => struct IdleBuddyCompAavePYTStructs.ContractData)"
          },
          "t_struct(ContractData)7311_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData",
            "members": [
              {
                "label": "underlying",
                "type": "t_address"
              },
              {
                "label": "cTokenNew",
                "type": "t_address"
              },
              {
                "label": "aV2Token",
                "type": "t_address"
              },
              {
                "label": "eToken",
                "type": "t_address"
              },
              {
                "label": "maToken",
                "type": "t_address"
              },
              {
                "label": "pytClearWinTranche",
                "type": "t_address"
              },
              {
                "label": "pytEulerStakingTranche",
                "type": "t_address"
              },
              {
                "label": "pytMorphoAaveTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearPorTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearFasTranche",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(ContractData)7311_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "8c21a371df18877fd67faf703b17da8bdf958211364452b41a511aca8aee99ff": {
      "address": "0xBF7e5212EF42bD33Bc1839e135f6f2725816EdED",
      "txHash": "0x4c2b99793d6f2679f68e0fcf0dd27be2aab0bb002c8857c45908541f70553bf9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:72"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "contractDatas",
            "type": "t_mapping(t_address,t_struct(ContractData)6216_storage)",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:74"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "allContractDatas",
            "type": "t_array(t_struct(ContractData)6216_storage)dyn_storage",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:75"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "isEulerDisabled",
            "type": "t_bool",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:77"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "maxClearUR",
            "type": "t_uint256",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(ContractData)6216_storage)": {
            "label": "mapping(address => struct IdleBuddyCompAavePYTStructs.ContractData)"
          },
          "t_struct(ContractData)6216_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData",
            "members": [
              {
                "label": "underlying",
                "type": "t_address"
              },
              {
                "label": "cTokenNew",
                "type": "t_address"
              },
              {
                "label": "aV2Token",
                "type": "t_address"
              },
              {
                "label": "eToken",
                "type": "t_address"
              },
              {
                "label": "maToken",
                "type": "t_address"
              },
              {
                "label": "pytClearWinTranche",
                "type": "t_address"
              },
              {
                "label": "pytEulerStakingTranche",
                "type": "t_address"
              },
              {
                "label": "pytMorphoAaveTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearPorTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearFasTranche",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(ContractData)6216_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "5fe26d25fb267b3c584598697f7d467841fc5d42888f3494d8d3fea73a3d0bee": {
      "address": "0x74DE99F325d70143c9B9B5DCbA39bfe602c6C4cD",
      "txHash": "0xe0f2066e0fcb4f6289e9a9c1cbe43b01520504b0eb031c525aafe387bd26ac60",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:22"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:25"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:28"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:31"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Detailed)1478",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:34"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:37"
          },
          {
            "label": "lastPriceTimestamp",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "InstadappLiteETHV2Strategy",
            "src": "contracts/strategies/instadapp/InstadappLiteETHV2Strategy.sol:15"
          },
          {
            "label": "lastPrice",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "InstadappLiteETHV2Strategy",
            "src": "contracts/strategies/instadapp/InstadappLiteETHV2Strategy.sol:16"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "159",
            "type": "t_uint256",
            "contract": "InstadappLiteETHV2Strategy",
            "src": "contracts/strategies/instadapp/InstadappLiteETHV2Strategy.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)1478": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "06f8a0f2fcba0220009057d5f08137bd7982922a037e2fa5c573f9d23d7bd747": {
      "address": "0xC3D127c37957492955C11E15Ccf1d2f20010230f",
      "txHash": "0x3128c95f8b1fa82607ec706e55d35d16c732ba896368ee7a65fc14b1e7ea42d8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2006",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:110"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lossToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "stkIDLEPerUnderlying",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/IdleCDOStorage.sol:136"
          },
          {
            "contract": "IdleCDOInstadappLiteVariant",
            "label": "liquidationToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOInstadappLiteVariant.sol:11"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2006": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4fd2f50d350af0602c265311f9126f26f0ce90f9aedb526d233c75b59a58c2fb": {
      "address": "0xA3BBadBb8765A51851031f0A91B26eD05FE88468",
      "txHash": "0xe4b909ca19cb748c8fdad6c0e0a880f8445690ebc973d517caa9494e9d1a811e",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:22"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:25"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:28"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:31"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Detailed)16428",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:34"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:37"
          },
          {
            "label": "lastPriceTimestamp",
            "offset": 0,
            "slot": "157",
            "type": "t_uint256",
            "contract": "InstadappLiteETHV2Strategy",
            "src": "contracts/strategies/instadapp/InstadappLiteETHV2Strategy.sol:12"
          },
          {
            "label": "lastPrice",
            "offset": 0,
            "slot": "158",
            "type": "t_uint256",
            "contract": "InstadappLiteETHV2Strategy",
            "src": "contracts/strategies/instadapp/InstadappLiteETHV2Strategy.sol:13"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "159",
            "type": "t_uint256",
            "contract": "InstadappLiteETHV2Strategy",
            "src": "contracts/strategies/instadapp/InstadappLiteETHV2Strategy.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)16428": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "89af72b5a82c593e7dc0256ec2647f31e54295e9c76e2e7c025e94924d6acc86": {
      "address": "0xd49d6BeEe20f87EE28F00f9376eC962AAB9aeaE2",
      "txHash": "0x60b62749cc37bcd303360fd629b14c309ea153aba7cf430169444ee44b379fc6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2006",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:110"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lossToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "stkIDLEPerUnderlying",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/IdleCDOStorage.sol:136"
          },
          {
            "contract": "IdleCDOInstadappLiteVariant",
            "label": "liquidationToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOInstadappLiteVariant.sol:20"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2006": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f156bdedd90f3286d5f109fcc34e76deb9b53fcb3cca1f07f85d742c2beef466": {
      "address": "0x0d0F8A0f04d54197f85fEe6d5523dF2d84A73b27",
      "txHash": "0x9a4a0ea8d756bee09f87d50859edd2adcaba4cf3eb4c0f62834b4d30298b0693",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2481",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:110"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lossToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "stkIDLEPerUnderlying",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/IdleCDOStorage.sol:136"
          },
          {
            "contract": "IdleCDOInstadappLiteVariant",
            "label": "liquidationToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOInstadappLiteVariant.sol:20"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2481": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "39d7bb6a1f49f22af47ab603ac9ba8c08d6829a3b5b8110b5918b3fed02b541a": {
      "address": "0x593fF7Ba8c0fd8bB87ce7214ec0F82119AA67a51",
      "txHash": "0x4812cfdb412ebb8d64c54013bc8d8094de2f42a72db887f9ca9b0a8526856f3b",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:72"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "contractDatas",
            "type": "t_mapping(t_address,t_struct(ContractData)6780_storage)",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:74"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "allContractDatas",
            "type": "t_array(t_struct(ContractData)6780_storage)dyn_storage",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:75"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "isEulerDisabled",
            "type": "t_bool",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:77"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "maxClearUR",
            "type": "t_uint256",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(ContractData)6780_storage)": {
            "label": "mapping(address => struct IdleBuddyCompAavePYTStructs.ContractData)"
          },
          "t_struct(ContractData)6780_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData",
            "members": [
              {
                "label": "underlying",
                "type": "t_address"
              },
              {
                "label": "cTokenNew",
                "type": "t_address"
              },
              {
                "label": "aV2Token",
                "type": "t_address"
              },
              {
                "label": "eToken",
                "type": "t_address"
              },
              {
                "label": "maToken",
                "type": "t_address"
              },
              {
                "label": "pytClearWinTranche",
                "type": "t_address"
              },
              {
                "label": "pytEulerStakingTranche",
                "type": "t_address"
              },
              {
                "label": "pytMorphoAaveTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearPorTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearFasTranche",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(ContractData)6780_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "e25ac757d60a3c5e5d44e0794b17b298f24141e08848daf8ee93e73f234b0ef0": {
      "address": "0x15bb111f1b7c60b5f97045c1e817878e8ebd218b",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:29"
          },
          {
            "label": "rebalancer",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:31"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:33"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:35"
          },
          {
            "label": "maxUnlentPerc",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:37"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:39"
          },
          {
            "label": "allAvailableTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:41"
          },
          {
            "label": "lastAllocations",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:44"
          },
          {
            "label": "protocolWrappers",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_address)",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:46"
          },
          {
            "label": "_minterBlock",
            "offset": 0,
            "slot": "260",
            "type": "t_bytes32",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:48"
          },
          {
            "label": "lastRebalancerAllocations",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:56"
          },
          {
            "label": "lastNAV",
            "offset": 0,
            "slot": "262",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:59"
          },
          {
            "label": "unclaimedFees",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:61"
          },
          {
            "label": "skipRedeemMinAmount",
            "offset": 0,
            "slot": "264",
            "type": "t_bool",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5ded03a01aa5f0158813c55cc27f6b9325a391139e9659bbad7994ca3d7094fe": {
      "address": "0xaeff59c091ac5db820b20f7a4447036d2ba77f16",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:29"
          },
          {
            "label": "rebalancer",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:31"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:33"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:35"
          },
          {
            "label": "maxUnlentPerc",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:37"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:39"
          },
          {
            "label": "allAvailableTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:41"
          },
          {
            "label": "lastAllocations",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:44"
          },
          {
            "label": "protocolWrappers",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_address)",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:46"
          },
          {
            "label": "_minterBlock",
            "offset": 0,
            "slot": "260",
            "type": "t_bytes32",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:48"
          },
          {
            "label": "lastRebalancerAllocations",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:56"
          },
          {
            "label": "lastNAV",
            "offset": 0,
            "slot": "262",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:59"
          },
          {
            "label": "unclaimedFees",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:61"
          },
          {
            "label": "skipRedeemMinAmount",
            "offset": 0,
            "slot": "264",
            "type": "t_bool",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:65"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5f0d1b557d51e78d6e3841863a2243c89ec0ac21853d4737958e9d662acdc58e": {
      "address": "0x2f5c260550ed0efede4881bc004107c3f04e26a1",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:29"
          },
          {
            "label": "rebalancer",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:31"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:33"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:35"
          },
          {
            "label": "maxUnlentPerc",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:37"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:39"
          },
          {
            "label": "allAvailableTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:41"
          },
          {
            "label": "lastAllocations",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:44"
          },
          {
            "label": "protocolWrappers",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_address)",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:46"
          },
          {
            "label": "_minterBlock",
            "offset": 0,
            "slot": "260",
            "type": "t_bytes32",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:48"
          },
          {
            "label": "lastRebalancerAllocations",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:56"
          },
          {
            "label": "lastNAV",
            "offset": 0,
            "slot": "262",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:59"
          },
          {
            "label": "unclaimedFees",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:61"
          },
          {
            "label": "skipRedeemMinAmount",
            "offset": 0,
            "slot": "264",
            "type": "t_bool",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:65"
          },
          {
            "label": "scaleForTolerance",
            "offset": 0,
            "slot": "265",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "80d6580b06882151e81115ee0664c675ba6518d251b1c6d60158b4dad4d605d0": {
      "address": "0x6850398a001776Aeb8a4E9Af75C3FdAB49ceCaD1",
      "txHash": "0xec272db91ecc0e64ac5a2f40189a609fef4b6b188ecb511f55cd724388d555c1",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:25"
          },
          {
            "label": "cpToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:28"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:31"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:34"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)18717",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:37"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:40"
          },
          {
            "label": "govToken",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:46"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:49"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IUniswapV2Router02)7437",
            "contract": "IdleClearpoolStrategy",
            "src": "contracts/strategies/clearpool/IdleClearpoolStrategy.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)18717": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)7437": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "66210db58784641033fcd5c6727e7075d0319c3041340973aa6fc673d608f0f4": {
      "address": "0xE7bDF364862eF8A31426e6E2B7D5dEFde3A59a26",
      "txHash": "0x5c22fe4a1bdc43ce49b5029663f4b7c61a1cadd9521bd1cc834582055a0b8a80",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2193",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:110"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lossToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "stkIDLEPerUnderlying",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/IdleCDOStorage.sol:136"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2193": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "f9db9e795ddad8bfafd44028e32940a99b708ffab8a49b0e4c0deffff7971f21": {
      "address": "0xC07c0f6fFa78DDad677a22697C083892209bb83b",
      "txHash": "0xe6baa6ee6937cfe4498314a064e2a6fcdf7bcdc8a0fe384c009ae223bc371347",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2481",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:110"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lossToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "stkIDLEPerUnderlying",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/IdleCDOStorage.sol:136"
          },
          {
            "contract": "IdleCDOInstadappLiteVariant",
            "label": "liquidationToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOInstadappLiteVariant.sol:20"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2481": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "afcc7a4520b7b759812566eff66508ca4bfa2613f559dc33b52b3ff028ded240": {
      "address": "0x70f30C5dCEc9D6Ce637F41f0eB5A8E8733902377",
      "txHash": "0xa517d777b27934fdcb23dbe5f440aee04599d45559db9efb97ee7d1c2a52cd00",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:72"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "contractDatas",
            "type": "t_mapping(t_address,t_struct(ContractData)6780_storage)",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:74"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "allContractDatas",
            "type": "t_array(t_struct(ContractData)6780_storage)dyn_storage",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:75"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "isEulerDisabled",
            "type": "t_bool",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:77"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "maxClearUR",
            "type": "t_uint256",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(ContractData)6780_storage)": {
            "label": "mapping(address => struct IdleBuddyCompAavePYTStructs.ContractData)"
          },
          "t_struct(ContractData)6780_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData",
            "members": [
              {
                "label": "underlying",
                "type": "t_address"
              },
              {
                "label": "cTokenNew",
                "type": "t_address"
              },
              {
                "label": "aV2Token",
                "type": "t_address"
              },
              {
                "label": "eToken",
                "type": "t_address"
              },
              {
                "label": "maToken",
                "type": "t_address"
              },
              {
                "label": "pytClearWinTranche",
                "type": "t_address"
              },
              {
                "label": "pytEulerStakingTranche",
                "type": "t_address"
              },
              {
                "label": "pytMorphoAaveTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearPorTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearFasTranche",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(ContractData)6780_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "bb5af4bf4ab429baeb01854468215f17ca0a25668cc7f9341e229d6026924309": {
      "address": "0x308e4cA6C8Ddb7Bc9AE2B9DC1DAc55897B362A7d",
      "txHash": "0xb656d456cc9c6402545781191ea230daa5f7392d46d15432a7c01df1507e52da",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:72"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "contractDatas",
            "type": "t_mapping(t_address,t_struct(ContractData)6850_storage)",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:74"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "allContractDatas",
            "type": "t_array(t_struct(ContractData)6850_storage)dyn_storage",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:75"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "isEulerDisabled",
            "type": "t_bool",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:77"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "maxClearUR",
            "type": "t_uint256",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:78"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "enable95Check",
            "type": "t_bool",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:79"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "maxClearWarningUR",
            "type": "t_uint256",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(ContractData)6850_storage)": {
            "label": "mapping(address => struct IdleBuddyCompAavePYTStructs.ContractData)"
          },
          "t_struct(ContractData)6850_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData",
            "members": [
              {
                "label": "underlying",
                "type": "t_address"
              },
              {
                "label": "cTokenNew",
                "type": "t_address"
              },
              {
                "label": "aV2Token",
                "type": "t_address"
              },
              {
                "label": "eToken",
                "type": "t_address"
              },
              {
                "label": "maToken",
                "type": "t_address"
              },
              {
                "label": "pytClearWinTranche",
                "type": "t_address"
              },
              {
                "label": "pytEulerStakingTranche",
                "type": "t_address"
              },
              {
                "label": "pytMorphoAaveTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearPorTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearFasTranche",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(ContractData)6850_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "36981ca7d3832264a0547080eefe874ce970f1f3ed04e1f31c0be0daa39dbe94": {
      "address": "0xc9f019Fa138Ba4FAc3B4e400705FbDD75B20Af8c",
      "txHash": "0x80dde73ea9e1d38d63a75d45bfb33e15f1771eae8177448051954e011c866971",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2481",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:110"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lossToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "stkIDLEPerUnderlying",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/IdleCDOStorage.sol:136"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2481": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "92aec5af7b9316ec0fa82b2344e46a43920e313fa51b121d71a6caed95ce971c": {
      "address": "0xcF66438D3B880f8f80B071F228Fff7BCDD38Bb90",
      "txHash": "0x1af271da8a559edf31e26cc6b80f27f842b8721b1914610d153d20dd275c9f1d",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:72"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "contractDatas",
            "type": "t_mapping(t_address,t_struct(ContractData)6914_storage)",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:74"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "allContractDatas",
            "type": "t_array(t_struct(ContractData)6914_storage)dyn_storage",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:75"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "isEulerDisabled",
            "type": "t_bool",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:77"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "maxClearUR",
            "type": "t_uint256",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:78"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "enable95Check",
            "type": "t_bool",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:79"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "maxClearWarningUR",
            "type": "t_uint256",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:80"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(ContractData)6914_storage)": {
            "label": "mapping(address => struct IdleBuddyCompAavePYTStructs.ContractData)"
          },
          "t_struct(ContractData)6914_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData",
            "members": [
              {
                "label": "underlying",
                "type": "t_address"
              },
              {
                "label": "cTokenNew",
                "type": "t_address"
              },
              {
                "label": "aV2Token",
                "type": "t_address"
              },
              {
                "label": "eToken",
                "type": "t_address"
              },
              {
                "label": "maToken",
                "type": "t_address"
              },
              {
                "label": "pytClearWinTranche",
                "type": "t_address"
              },
              {
                "label": "pytEulerStakingTranche",
                "type": "t_address"
              },
              {
                "label": "pytMorphoAaveTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearPorTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearFasTranche",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(ContractData)6914_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "6bc2764cafe2f1cf27bdb838697ad7c81480e8949dff7c36deec2f2f9777ecab": {
      "address": "0xa1461486c5b4195F5fBC67a0840B16F5b4362075",
      "txHash": "0xf7098bcded35539ea399c12bf5cf4b5f1276baaa4ccb353ebed4330d319d09d6",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:65"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "contractDatas",
            "type": "t_mapping(t_address,t_struct(ContractData)6585_storage)",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:67"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "allContractDatas",
            "type": "t_array(t_struct(ContractData)6585_storage)dyn_storage",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:68"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "isEulerDisabled",
            "type": "t_bool",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:70"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "maxClearUR",
            "type": "t_uint256",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:71"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "enable95Check",
            "type": "t_bool",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:72"
          },
          {
            "contract": "IdleBuddyCompAavePYT",
            "label": "maxClearWarningUR",
            "type": "t_uint256",
            "src": "contracts/utils/IdleBuddyCompAavePYT.sol:73"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(ContractData)6585_storage)": {
            "label": "mapping(address => struct IdleBuddyCompAavePYTStructs.ContractData)"
          },
          "t_struct(ContractData)6585_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData",
            "members": [
              {
                "label": "underlying",
                "type": "t_address"
              },
              {
                "label": "cTokenNew",
                "type": "t_address"
              },
              {
                "label": "aV2Token",
                "type": "t_address"
              },
              {
                "label": "eToken",
                "type": "t_address"
              },
              {
                "label": "maToken",
                "type": "t_address"
              },
              {
                "label": "pytClearWinTranche",
                "type": "t_address"
              },
              {
                "label": "pytEulerStakingTranche",
                "type": "t_address"
              },
              {
                "label": "pytMorphoAaveTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearPorTranche",
                "type": "t_address"
              },
              {
                "label": "pytClearFasTranche",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(ContractData)6585_storage)dyn_storage": {
            "label": "struct IdleBuddyCompAavePYTStructs.ContractData[]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "e4c121a87f4ee152dbd7f7c47abecdc1f686ef8a751d97386602f2a288bf3ba8": {
      "address": "0x697655518c1e063fA1F14de2Bf37602b7316305B",
      "txHash": "0xeacce679891b850e3033509a7ffd9bfee429922b8f86215359087740b031640a",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:22"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:25"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:28"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:31"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Detailed)19645",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:34"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)19645": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "3b027e18a000f015b12868fa8366ff091afcde5b4683c0a0b1bd3cefae659faf": {
      "address": "0xA6B353b2D590D3c0cbCB85c6eF02EF9c1da2AA59",
      "txHash": "0x6a23c528423c883dfea658fa8c139deb814e87450a5c861571bc4b35decdfca0",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2481",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:110"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lossToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "stkIDLEPerUnderlying",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/IdleCDOStorage.sol:136"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2481": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "e1a2007c3b9f106701be61a70c7845a09d25434700dec7d03dc8c1e7a56928f6": {
      "address": "0x835C848E0486E44620bF07f06182aAf02A1a6DD8",
      "txHash": "0xcbb74fbf3fee5f1353a24bb908c8bb0683fb4059e475866688c2c16c661ca22f",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:22"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:25"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:28"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:31"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Detailed)2007",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:34"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:37"
          },
          {
            "label": "rewardTokens",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_address)dyn_storage",
            "contract": "MetaMorphoStrategy",
            "src": "contracts/strategies/morpho/MetaMorphoStrategy.sol:17"
          },
          {
            "label": "morphoTransferable",
            "offset": 0,
            "slot": "158",
            "type": "t_bool",
            "contract": "MetaMorphoStrategy",
            "src": "contracts/strategies/morpho/MetaMorphoStrategy.sol:20"
          },
          {
            "label": "mmSnippets",
            "offset": 1,
            "slot": "158",
            "type": "t_address",
            "contract": "MetaMorphoStrategy",
            "src": "contracts/strategies/morpho/MetaMorphoStrategy.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)2007": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fd5d28ec1f5478df96eefea78471fe8af8c5e3a7bd2974670980c67c31e52720": {
      "address": "0x0e07ef9F9368a4092cA1bA9f01de1AE7bCaEe361",
      "txHash": "0x876688afe8ab8b5f7fcea8ca0ab5aac84f746fdaaf4cff04b0c68c8a8c1ca472",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:22"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:25"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:28"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:31"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Detailed)6494",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:34"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:37"
          },
          {
            "label": "rewardTokens",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_address)dyn_storage",
            "contract": "MetaMorphoStrategy",
            "src": "contracts/strategies/morpho/MetaMorphoStrategy.sol:17"
          },
          {
            "label": "morphoTransferable",
            "offset": 0,
            "slot": "158",
            "type": "t_bool",
            "contract": "MetaMorphoStrategy",
            "src": "contracts/strategies/morpho/MetaMorphoStrategy.sol:20"
          },
          {
            "label": "mmSnippets",
            "offset": 1,
            "slot": "158",
            "type": "t_address",
            "contract": "MetaMorphoStrategy",
            "src": "contracts/strategies/morpho/MetaMorphoStrategy.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)6494": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1dfdcaa12bc7f105fb1bc31f471b87bdf233838bbf985324f9e2362335c124d1": {
      "address": "0xb5031e764D502C041B2FD3F52e0Ad57e4fdEA017",
      "txHash": "0x592117790064e7e64b913c10ff69dc66576b8b4bf06c2427f6042573241bcb6e",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:22"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:25"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:28"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:31"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Detailed)2007",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:34"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:37"
          },
          {
            "label": "rewardTokens",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_address)dyn_storage",
            "contract": "MetaMorphoStrategy",
            "src": "contracts/strategies/morpho/MetaMorphoStrategy.sol:29"
          },
          {
            "label": "morphoTransferable",
            "offset": 0,
            "slot": "158",
            "type": "t_bool",
            "contract": "MetaMorphoStrategy",
            "src": "contracts/strategies/morpho/MetaMorphoStrategy.sol:32"
          },
          {
            "label": "mmSnippets",
            "offset": 1,
            "slot": "158",
            "type": "t_address",
            "contract": "MetaMorphoStrategy",
            "src": "contracts/strategies/morpho/MetaMorphoStrategy.sol:35"
          },
          {
            "label": "rewardsData",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_array(t_struct(RewardData)2857_storage)dyn_storage)",
            "contract": "MetaMorphoStrategy",
            "src": "contracts/strategies/morpho/MetaMorphoStrategy.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(RewardData)2857_storage)dyn_storage": {
            "label": "struct MetaMorphoStrategy.RewardData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Detailed)2007": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(RewardData)2857_storage)dyn_storage)": {
            "label": "mapping(address => struct MetaMorphoStrategy.RewardData[])",
            "numberOfBytes": "32"
          },
          "t_struct(RewardData)2857_storage": {
            "label": "struct MetaMorphoStrategy.RewardData",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "urd",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardToken",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "marketId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "uniV3Path",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f25fbba864807a30dbfe9397684b04eb050cb68ed560b2bb4cb557c73f8c9f90": {
      "address": "0x1f69f47ba5F9437dcfd856B838Fa0070f493aE13",
      "txHash": "0x5a80b15c9b15df15963eb5eeead133c944cf9129f5d4e4990242a72d7495ab2e",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:22"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:25"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:28"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:31"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Detailed)2007",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:34"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:37"
          },
          {
            "label": "rewardTokens",
            "offset": 0,
            "slot": "157",
            "type": "t_array(t_address)dyn_storage",
            "contract": "MetaMorphoStrategy",
            "src": "contracts/strategies/morpho/MetaMorphoStrategy.sol:29"
          },
          {
            "label": "morphoTransferable",
            "offset": 0,
            "slot": "158",
            "type": "t_bool",
            "contract": "MetaMorphoStrategy",
            "src": "contracts/strategies/morpho/MetaMorphoStrategy.sol:32"
          },
          {
            "label": "mmSnippets",
            "offset": 1,
            "slot": "158",
            "type": "t_address",
            "contract": "MetaMorphoStrategy",
            "src": "contracts/strategies/morpho/MetaMorphoStrategy.sol:35"
          },
          {
            "label": "rewardsData",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_array(t_struct(RewardData)2857_storage)dyn_storage)",
            "contract": "MetaMorphoStrategy",
            "src": "contracts/strategies/morpho/MetaMorphoStrategy.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(RewardData)2857_storage)dyn_storage": {
            "label": "struct MetaMorphoStrategy.RewardData[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Detailed)2007": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_struct(RewardData)2857_storage)dyn_storage)": {
            "label": "mapping(address => struct MetaMorphoStrategy.RewardData[])",
            "numberOfBytes": "32"
          },
          "t_struct(RewardData)2857_storage": {
            "label": "struct MetaMorphoStrategy.RewardData",
            "members": [
              {
                "label": "sender",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "urd",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "rewardToken",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "marketId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "uniV3Path",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
