{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x44b6CDda5D030B29eEc58009F6f474082313C470",
    "txHash": "0x25db4ef52ffce525af04dc140e730f0c5647bf14e35467682cac28cc2972fcb4"
  },
  "proxies": [
    {
      "address": "0xEc470753b56Ced3784ce29DB7C297f0C1b75fC87",
      "txHash": "0x783962414cee0564443771f221b211bf1bbaa51973044c831ea666657a95aad1",
      "kind": "transparent"
    },
    {
      "address": "0xB144eE58679e15f1b25A5F6EfcEBDd0AB8c8BEF5",
      "txHash": "0xda03883d2a57efa3ba01161621d1c0902990cd090c68e294b02f6f55a6aa0e3b",
      "kind": "transparent"
    },
    {
      "address": "0x5322471a7E37Ac2B8902cFcba84d266b37D811A0",
      "txHash": "0x9af0e9fde76490a2b62cd8f73ce34bfcd8fb74b928a63e80d24d80c7c288884a",
      "kind": "transparent"
    },
    {
      "address": "0x103A3b128991781EE2c8db0454cA99d67b257923",
      "txHash": "0x835e0b3b3b368c6d213be4e21447cfc2506d095a36bab7f14d29349452a6eb06",
      "kind": "transparent"
    },
    {
      "address": "0x4Ddb301403Ee3C4B4099ED128b34c36d86f6df35",
      "txHash": "0x933b99f054552490270df697ac5285f990e050398d90ba5f03851d5fa7d46559",
      "kind": "transparent"
    },
    {
      "address": "0xF9E2AE779a7d25cDe46FccC41a27B8A4381d4e52",
      "txHash": "0x49c1392b38ce9be7071727cdf40c083599c736e5046e0c72e60def69c7c21b86",
      "kind": "transparent"
    },
    {
      "address": "0xeAB324e9450d1EfFa087ccE8eff6C1FB476d60Ff",
      "txHash": "0xd348c07e849a02fd9b1bdc24efea37c8e1bc6d28bf2002fd3ec73b01c16531ce",
      "kind": "transparent"
    }
  ],
  "impls": {
    "f5d20a615686ac321f4591c9f5ebda5e10fd76d37480f7ff77b7158abdcd6ca5": {
      "address": "0x0E90CF05aCB23D8DFa856A74e74a165C6A7aF8b3",
      "txHash": "0x7ef214c4cc360c796a76619c934e6056f005e24dd799672625a7af09a3f51814",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:39"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "token",
            "type": "t_address",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:41"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:43"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:45"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "baseToken",
            "type": "t_address",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:48"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "cxToken",
            "type": "t_address",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:49"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "stakingRewards",
            "type": "t_contract(IStakingDualRewards)30248",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:52"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "quickRouter",
            "type": "t_contract(IUniswapV2Router02)30641",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:55"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:58"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "lastIndexAmount",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:61"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "lastIndexedTime",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:64"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "lastApr",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:67"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:70"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:73"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:76"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IStakingDualRewards)30248": {
            "label": "contract IStakingDualRewards"
          },
          "t_contract(IUniswapV2Router02)30641": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c52435484a2ef6c2c9f2d3197111483faa96740f9b012999fd56699ebce1bd7d": {
      "address": "0x710426B69e50863b1689F36DC324265C7DD076C9",
      "txHash": "0x8dbd4b3581fbd8cb335ad86a9391596deb3e4a9441f96f3ac4cad41093f741be",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:14"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:16"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:18"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:20"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "token",
            "type": "t_address",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:22"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:24"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:26"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:28"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2724",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:30"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:33"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:35"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:38"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:40"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:43"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:45"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:47"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:49"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:51"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:53"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:57"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:60"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:62"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:64"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:66"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:68"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:70"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:72"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:74"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:77"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:79"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:82"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:84"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:86"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:92"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:94"
          },
          {
            "contract": "IdleCDOStoragePolygon",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/polygon/IdleCDOStoragePolygon.sol:96"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2724": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3e30f073214f59852d39ef30926b2b95b045532c9248aeb754abec1122ea8583": {
      "address": "0xAC253DaA41190Df771a9D878CBE7791CBE682E86",
      "txHash": "0x43a0b2029ec5082932be1a6e4e74e7ce1fdb49c24453ed5c1f8768246c930678",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "strategyToken",
            "type": "t_address",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:39"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "token",
            "type": "t_address",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:41"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:43"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:45"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "baseToken",
            "type": "t_address",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:48"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "cxToken",
            "type": "t_address",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:49"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "stakingRewards",
            "type": "t_contract(IStakingDualRewards)29519",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:52"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "quickRouter",
            "type": "t_contract(IUniswapV2Router02)29912",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:55"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "idleCDO",
            "type": "t_address",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:58"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "lastIndexAmount",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:61"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "lastIndexedTime",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:64"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "lastApr",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:67"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:70"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:73"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "totalLpTokensStaked",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:76"
          },
          {
            "contract": "CelsiusxStrategy",
            "label": "totalLpTokensLocked",
            "type": "t_uint256",
            "src": "quickswap-PYT/src/CelsiusxStrategy.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IStakingDualRewards)29519": {
            "label": "contract IStakingDualRewards"
          },
          "t_contract(IUniswapV2Router02)29912": {
            "label": "contract IUniswapV2Router02"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "204c368925c1fda8cd6298e0ca98c6b418438f006229ff624f71e3580c507e26": {
      "address": "0x313F922BE1649cEc058EC0f076664500c78bdc0b",
      "txHash": "0x09bd45e44f06f6e86bed58b552ff5fda160495978cb699562d7cab2da3d500d0",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)45_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:96"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleTokenFungible.sol:28"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleTokenFungible.sol:30"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "feeAddress",
            "type": "t_address",
            "src": "contracts/IdleTokenFungible.sol:32"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "tokenDecimals",
            "type": "t_uint256",
            "src": "contracts/IdleTokenFungible.sol:34"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "maxUnlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleTokenFungible.sol:36"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleTokenFungible.sol:38"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "allAvailableTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleTokenFungible.sol:40"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "lastAllocations",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/IdleTokenFungible.sol:43"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "protocolWrappers",
            "type": "t_mapping(t_address,t_address)",
            "src": "contracts/IdleTokenFungible.sol:45"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "_minterBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleTokenFungible.sol:47"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "lastRebalancerAllocations",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "contracts/IdleTokenFungible.sol:55"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "lastNAV",
            "type": "t_uint256",
            "src": "contracts/IdleTokenFungible.sol:58"
          },
          {
            "contract": "IdleTokenFungible",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleTokenFungible.sol:60"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bf707142ae728c3824035ca9258c0857b049e1ec38c236f20342ee77266032cb": {
      "address": "0x90c84237fDdf091b1E63f369AF122EB46000bc70",
      "txHash": "0x5e138b8b9fa8354b6d20b47482f77cbf9b49e40c30b4fb788fedddf2bae48260",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "contract": "IdleRebalancerHelperJunior",
            "label": "uniswapRouter",
            "type": "t_contract(IUniswapV2Router02)1349",
            "src": "contracts/utils/IdleRebalancerHelperJunior.sol:63"
          },
          {
            "contract": "IdleRebalancerHelperJunior",
            "label": "owner",
            "type": "t_address",
            "src": "contracts/utils/IdleRebalancerHelperJunior.sol:64"
          },
          {
            "contract": "IdleRebalancerHelperJunior",
            "label": "contractDatas",
            "type": "t_mapping(t_address,t_struct(ContractData)1471_storage)",
            "src": "contracts/utils/IdleRebalancerHelperJunior.sol:66"
          },
          {
            "contract": "IdleRebalancerHelperJunior",
            "label": "allContractDatas",
            "type": "t_array(t_struct(ContractData)1471_storage)dyn_storage",
            "src": "contracts/utils/IdleRebalancerHelperJunior.sol:67"
          }
        ],
        "types": {
          "t_contract(IUniswapV2Router02)1349": {
            "label": "contract IUniswapV2Router02"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(ContractData)1471_storage)": {
            "label": "mapping(address => struct IdleRebalancerHelperJunior.ContractData)"
          },
          "t_struct(ContractData)1471_storage": {
            "label": "struct IdleRebalancerHelperJunior.ContractData",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "protocolDatas",
                "type": "t_array(t_struct(ClearLikeData)1482_storage)dyn_storage"
              }
            ]
          },
          "t_array(t_struct(ClearLikeData)1482_storage)dyn_storage": {
            "label": "struct IdleRebalancerHelperJunior.ClearLikeData[]"
          },
          "t_struct(ClearLikeData)1482_storage": {
            "label": "struct IdleRebalancerHelperJunior.ClearLikeData",
            "members": [
              {
                "label": "token",
                "type": "t_address"
              },
              {
                "label": "cdo",
                "type": "t_address"
              },
              {
                "label": "tranche",
                "type": "t_address"
              },
              {
                "label": "cpTokenLike",
                "type": "t_address"
              },
              {
                "label": "reward",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(ContractData)1471_storage)dyn_storage": {
            "label": "struct IdleRebalancerHelperJunior.ContractData[]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c18505c69920165606cc17d6203bc017f007e784032fb25bf1c9ab00dd1541f4": {
      "address": "0x77F0B2d4A916Bf0aaD0336A8B206B7E7E6f51293",
      "txHash": "0x11235df835f1dbd6aaf485c343656bb498e8ef6b61c394658fc153d408a60e7e",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:30"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:32"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:34"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IERC20Detailed)8275",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:36"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:38"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:42"
          },
          {
            "label": "borrower",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:44"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:46"
          },
          {
            "label": "withdrawsRequests",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:48"
          },
          {
            "label": "instantWithdrawsRequests",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:50"
          },
          {
            "label": "pendingWithdraws",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:52"
          },
          {
            "label": "pendingInstantWithdraws",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:54"
          },
          {
            "label": "totEpochDeposits",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:56"
          },
          {
            "label": "canTransfer",
            "offset": 0,
            "slot": "214",
            "type": "t_bool",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:58"
          },
          {
            "label": "lastWithdrawRequest",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:60"
          },
          {
            "label": "epochNumber",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:62"
          },
          {
            "label": "unscaledApr",
            "offset": 0,
            "slot": "217",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)8275": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c09466548147451df7068ea97d0c7a15b24fffb110b0ed4360a6b6b12308f56e": {
      "address": "0xC6C6812Ecce9f6b273cE220fFff9fed35D64d7f3",
      "txHash": "0x84db7fd63bd50a0d31da057b0b473c31cda4e414664ddfd5fe966e7da1e4cb49",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "51",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "limit",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "GuardedLaunchUpgradable",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "label": "governanceRecoveryFund",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "GuardedLaunchUpgradable",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "label": "_lastCallerBlock",
            "offset": 0,
            "slot": "203",
            "type": "t_bytes32",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "label": "latestHarvestBlock",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "label": "incentiveTokens",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "label": "guardian",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "209",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "label": "rebalancer",
            "offset": 0,
            "slot": "210",
            "type": "t_address",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "label": "uniswapRouterV2",
            "offset": 0,
            "slot": "211",
            "type": "t_contract(IUniswapV2Router02)3118",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "label": "allowAAWithdraw",
            "offset": 20,
            "slot": "211",
            "type": "t_bool",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "label": "allowBBWithdraw",
            "offset": 21,
            "slot": "211",
            "type": "t_bool",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "label": "revertIfTooLow",
            "offset": 22,
            "slot": "211",
            "type": "t_bool",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "label": "skipDefaultCheck",
            "offset": 23,
            "slot": "211",
            "type": "t_bool",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "212",
            "type": "t_address",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "213",
            "type": "t_address",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "label": "AATranche",
            "offset": 0,
            "slot": "214",
            "type": "t_address",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "label": "BBTranche",
            "offset": 0,
            "slot": "215",
            "type": "t_address",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "label": "AAStaking",
            "offset": 0,
            "slot": "216",
            "type": "t_address",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "label": "BBStaking",
            "offset": 0,
            "slot": "217",
            "type": "t_address",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "label": "trancheAPRSplitRatio",
            "offset": 0,
            "slot": "218",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "label": "trancheIdealWeightRatio",
            "offset": 0,
            "slot": "219",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "label": "priceAA",
            "offset": 0,
            "slot": "220",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "label": "priceBB",
            "offset": 0,
            "slot": "221",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "label": "lastNAVAA",
            "offset": 0,
            "slot": "222",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "label": "lastNAVBB",
            "offset": 0,
            "slot": "223",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "label": "lastStrategyPrice",
            "offset": 0,
            "slot": "224",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "label": "unclaimedFees",
            "offset": 0,
            "slot": "225",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "label": "unlentPerc",
            "offset": 0,
            "slot": "226",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "227",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "label": "feeReceiver",
            "offset": 0,
            "slot": "228",
            "type": "t_address",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "label": "idealRange",
            "offset": 0,
            "slot": "229",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "label": "releaseBlocksPeriod",
            "offset": 0,
            "slot": "230",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "label": "harvestedRewards",
            "offset": 0,
            "slot": "231",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "label": "directDeposit",
            "offset": 0,
            "slot": "232",
            "type": "t_bool",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "label": "referral",
            "offset": 1,
            "slot": "232",
            "type": "t_address",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "label": "feeSplit",
            "offset": 0,
            "slot": "233",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "label": "isAYSActive",
            "offset": 0,
            "slot": "234",
            "type": "t_bool",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "label": "liquidationTolerance",
            "offset": 0,
            "slot": "235",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:112"
          },
          {
            "label": "minAprSplitAYS",
            "offset": 0,
            "slot": "236",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "label": "maxDecreaseDefault",
            "offset": 0,
            "slot": "237",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "label": "lossToleranceBps",
            "offset": 0,
            "slot": "238",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "label": "stkIDLEPerUnderlying",
            "offset": 0,
            "slot": "239",
            "type": "t_uint256",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:124"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "240",
            "type": "t_array(t_uint256)46_storage",
            "contract": "IdleCDOStorage",
            "src": "contracts/IdleCDOStorage.sol:138"
          },
          {
            "label": "isEpochRunning",
            "offset": 0,
            "slot": "286",
            "type": "t_bool",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:26"
          },
          {
            "label": "allowAAWithdrawRequest",
            "offset": 1,
            "slot": "286",
            "type": "t_bool",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:28"
          },
          {
            "label": "allowBBWithdrawRequest",
            "offset": 2,
            "slot": "286",
            "type": "t_bool",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:30"
          },
          {
            "label": "epochDuration",
            "offset": 0,
            "slot": "287",
            "type": "t_uint256",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:32"
          },
          {
            "label": "instantWithdrawDelay",
            "offset": 0,
            "slot": "288",
            "type": "t_uint256",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:34"
          },
          {
            "label": "expectedEpochInterest",
            "offset": 0,
            "slot": "289",
            "type": "t_uint256",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:36"
          },
          {
            "label": "epochEndDate",
            "offset": 0,
            "slot": "290",
            "type": "t_uint256",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:38"
          },
          {
            "label": "instantWithdrawDeadline",
            "offset": 0,
            "slot": "291",
            "type": "t_uint256",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:40"
          },
          {
            "label": "lastEpochApr",
            "offset": 0,
            "slot": "292",
            "type": "t_uint256",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:42"
          },
          {
            "label": "instantWithdrawAprDelta",
            "offset": 0,
            "slot": "293",
            "type": "t_uint256",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:44"
          },
          {
            "label": "pendingWithdrawFees",
            "offset": 0,
            "slot": "294",
            "type": "t_uint256",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:46"
          },
          {
            "label": "lastEpochInterest",
            "offset": 0,
            "slot": "295",
            "type": "t_uint256",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:48"
          },
          {
            "label": "allowInstantWithdraw",
            "offset": 0,
            "slot": "296",
            "type": "t_bool",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:50"
          },
          {
            "label": "disableInstantWithdraw",
            "offset": 1,
            "slot": "296",
            "type": "t_bool",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:52"
          },
          {
            "label": "defaulted",
            "offset": 2,
            "slot": "296",
            "type": "t_bool",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:54"
          },
          {
            "label": "keyring",
            "offset": 3,
            "slot": "296",
            "type": "t_address",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:56"
          },
          {
            "label": "keyringPolicyId",
            "offset": 0,
            "slot": "297",
            "type": "t_uint256",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:58"
          },
          {
            "label": "bufferPeriod",
            "offset": 0,
            "slot": "298",
            "type": "t_uint256",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:60"
          },
          {
            "label": "keyringAllowWithdraw",
            "offset": 0,
            "slot": "299",
            "type": "t_bool",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:62"
          },
          {
            "label": "interestForOverUnderPerformance",
            "offset": 0,
            "slot": "300",
            "type": "t_int256",
            "contract": "IdleCDOEpochVariant",
            "src": "contracts/IdleCDOEpochVariant.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IUniswapV2Router02)3118": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4711bf4bcde664a7b3871bb3c37a9dc5fe9862969c9c5f069ad1a171a8cd546d": {
      "address": "0xbe73A30E9B9aE208Dfe615889bb4eff32a0e9208",
      "txHash": "0xb7f7592e78d7f26417bed989194c8a4647feee234bf05ea01c50fa13beafc103",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "idleCDOEpoch",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:25"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:27"
          },
          {
            "label": "underlying",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:29"
          },
          {
            "label": "tranche",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:31"
          },
          {
            "label": "userDepositsEpochs",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:33"
          },
          {
            "label": "epochPrice",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:35"
          },
          {
            "label": "epochPendingDeposits",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:37"
          },
          {
            "label": "userWithdrawalsEpochs",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:39"
          },
          {
            "label": "epochPendingWithdrawals",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:41"
          },
          {
            "label": "epochPendingClaims",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:43"
          },
          {
            "label": "epochWithdrawPrice",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:45"
          },
          {
            "label": "isEpochInstant",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:47"
          },
          {
            "label": "pendingClaims",
            "offset": 0,
            "slot": "163",
            "type": "t_bool",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
