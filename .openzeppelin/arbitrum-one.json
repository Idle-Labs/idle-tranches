{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x2A6F03A198d245dAF1fdB330D1D50bCC607Eecab",
    "txHash": "0x828773aa3104a5af835311a458b4b2430c9ec3f149ed7dc19357784fb91859a9"
  },
  "proxies": [
    {
      "address": "0xB5D4D8d9122Bf252B65DAbb64AaD68346405443C",
      "txHash": "0xa37a6c3089bccdc27d3ff29288812c25cd7cc80e948f2f5f3ff36d8be00de666",
      "kind": "transparent"
    },
    {
      "address": "0x6b8A1e78Ac707F9b0b5eB4f34B02D9af84D2b689",
      "txHash": "0x588528df7c053bf11dfd0a4ad7a5f20d852ef4052d9520c13c68d8596278b0c3",
      "kind": "transparent"
    },
    {
      "address": "0x341c6418005feFad6F1e0984B411Ca73D63C8686",
      "txHash": "0xa28bd6aacfe446cdd188870fd0eed7845cbd13ab9ba9fc523c5198ac544e899d",
      "kind": "transparent"
    },
    {
      "address": "0x0E90CF05aCB23D8DFa856A74e74a165C6A7aF8b3",
      "txHash": "0xc0e32bc89fb3f0545b43feb48e0d80e75c560b11858abe4210018576b04303f1",
      "kind": "transparent"
    },
    {
      "address": "0x466cFDfF869666941CdB89daa412c3CddC55D6c1",
      "txHash": "0xa8b0bf7af889f12a94c14d3356d8d56cdf923d45f619f4aeb6c564cca6e0745c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "e6319dfec35819d49bfc455f323f276eb4bb9283ecb054b645cb54f12c5ce4da": {
      "address": "0x8aA1379e46A8C1e9B7BB2160254813316b5F35B8",
      "txHash": "0x970c2bd33f2351bb4ef7a7184df62eda0070a7ff7430dcb754c4f8b0065166b0",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:22"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:25"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:28"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:31"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Detailed)21380",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:34"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)21380": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "12891b1576b4691dfdcc1dcf6f70707373f4bb888808e133269c3c6cf4d2797f": {
      "address": "0x2361130282a24421D9fdf2d1072C8edE2a79F108",
      "txHash": "0x3d293d37e940e0df24adcf9ee2335f97717603a0679e47c974e8bd4eb95585c2",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2481",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "directDeposit",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:110"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lossToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "stkIDLEPerUnderlying",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/IdleCDOStorage.sol:136"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2481": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "6b8750a5151b25365253cd62b0c754fb88da365f54328286b149a8f1ad0fdc8f": {
      "address": "0x5d4E705315ACa451Db40bf7c067077C768B3FFd0",
      "txHash": "0x6c3207f2bc2c68ffa01dea539b4323b227621c7ada20c7ffb56930f1f506e198",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:22"
          },
          {
            "label": "strategyToken",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:25"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:28"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:31"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IERC20Detailed)2118",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:34"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "ERC4626Strategy",
            "src": "contracts/strategies/ERC4626Strategy.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)2118": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c18505c69920165606cc17d6203bc017f007e784032fb25bf1c9ab00dd1541f4": {
      "address": "0x4220714A44EAF70810AB8742a8875FAcEe2De004",
      "txHash": "0xee5ac2b752b081e691b82e373c6f0b720fc23d26678dc9327ff399fc61109eda",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:30"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:32"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:34"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IERC20Detailed)9603",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:36"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:38"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:42"
          },
          {
            "label": "borrower",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:44"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:46"
          },
          {
            "label": "withdrawsRequests",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:48"
          },
          {
            "label": "instantWithdrawsRequests",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:50"
          },
          {
            "label": "pendingWithdraws",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:52"
          },
          {
            "label": "pendingInstantWithdraws",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:54"
          },
          {
            "label": "totEpochDeposits",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:56"
          },
          {
            "label": "canTransfer",
            "offset": 0,
            "slot": "214",
            "type": "t_bool",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:58"
          },
          {
            "label": "lastWithdrawRequest",
            "offset": 0,
            "slot": "215",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:60"
          },
          {
            "label": "epochNumber",
            "offset": 0,
            "slot": "216",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:62"
          },
          {
            "label": "unscaledApr",
            "offset": 0,
            "slot": "217",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)9603": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ccaba65718896b77adab550d8aca59e0743139c37b2722c7c0fe06d0b80c7b7c": {
      "address": "0xf12aCB52E784B9482bbe4ef1C5741352584bE4Ca",
      "txHash": "0x35c37ad6b4ae817f9ba540029f92721c12865e612150780d030fd6078b846b62",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)3118",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "directDeposit",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:110"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lossToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "stkIDLEPerUnderlying",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/IdleCDOStorage.sol:136"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "isEpochRunning",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:26"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "allowAAWithdrawRequest",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:28"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "allowBBWithdrawRequest",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:30"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "epochDuration",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:32"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "instantWithdrawDelay",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:34"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "expectedEpochInterest",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:36"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "epochEndDate",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:38"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "instantWithdrawDeadline",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:40"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "lastEpochApr",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:42"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "instantWithdrawAprDelta",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:44"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "pendingWithdrawFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:46"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "lastEpochInterest",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:48"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "allowInstantWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:50"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "disableInstantWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:52"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "defaulted",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:54"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "keyring",
            "type": "t_address",
            "src": "contracts/IdleCDOEpochVariant.sol:56"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "keyringPolicyId",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:58"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "bufferPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:60"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "keyringAllowWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:62"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)3118": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "4711bf4bcde664a7b3871bb3c37a9dc5fe9862969c9c5f069ad1a171a8cd546d": {
      "address": "0x5c30A25fef9c7FD2DC53E135B4ae3496834739fD",
      "txHash": "0x284381b6a1b1f688f45a417233c39b411e7c203d6bb5e2992e1ca14970dfbb61",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "idleCDOEpoch",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:25"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:27"
          },
          {
            "label": "underlying",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:29"
          },
          {
            "label": "tranche",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:31"
          },
          {
            "label": "userDepositsEpochs",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:33"
          },
          {
            "label": "epochPrice",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:35"
          },
          {
            "label": "epochPendingDeposits",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:37"
          },
          {
            "label": "userWithdrawalsEpochs",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:39"
          },
          {
            "label": "epochPendingWithdrawals",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:41"
          },
          {
            "label": "epochPendingClaims",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:43"
          },
          {
            "label": "epochWithdrawPrice",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:45"
          },
          {
            "label": "isEpochInstant",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:47"
          },
          {
            "label": "pendingClaims",
            "offset": 0,
            "slot": "163",
            "type": "t_bool",
            "contract": "IdleCDOEpochQueue",
            "src": "contracts/IdleCDOEpochQueue.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
