{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x8aA1379e46A8C1e9B7BB2160254813316b5F35B8",
    "txHash": "0xdaddad28c7f1e98818db9372edd8a2883cdeefa2f8e51e6c3ea92462df33561b"
  },
  "proxies": [
    {
      "address": "0xB5D4D8d9122Bf252B65DAbb64AaD68346405443C",
      "txHash": "0x0c7f03567c2ac4f4a99a9269442ede3fd7681022397b4bf71e5420e2fa49ac96",
      "kind": "transparent"
    },
    {
      "address": "0x6b8A1e78Ac707F9b0b5eB4f34B02D9af84D2b689",
      "txHash": "0x2bdc8b669052188bb73f42e7f9b62ecbdb79eba579165f6dbdfd466a9d215313",
      "kind": "transparent"
    },
    {
      "address": "0x73318bF57Fa6A4a97e0140e5CfF8219755FcDdbc",
      "txHash": "0x748af879ac1842449ae955c784dc4497b659373add8d53de0bd35be1497f9add",
      "kind": "transparent"
    }
  ],
  "impls": {
    "6d162fac86a8499bccaf1098ed946412eb95e8e5500a1eaf71fb4e3023ae636c": {
      "address": "0xe5441efBdA7a3613597eB8e2c42AE4C837eA2149",
      "txHash": "0x2ef8b279a55dd85b73fa9c5cde2f6a9fbbb649677c9454c58ae58faa0e3f64fe",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:25"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:30"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:34"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:36"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:38"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:309"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:31"
          },
          {
            "label": "cpToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:34"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:37"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:40"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)16262",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:43"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:46"
          },
          {
            "label": "govToken",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:52"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:55"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IUniswapV2Router02)5195",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)16262": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)5195": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        }
      }
    },
    "c6485cbd63ccc1673fc3ba8363fa9c6287c23b9a656801a11b9690d5bd5a61ba": {
      "address": "0x2A6F03A198d245dAF1fdB330D1D50bCC607Eecab",
      "txHash": "0xf2fe1750ebea583ee0ca7c1e5a830f90ed529d13c7fabd888eff5599140099b5",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:31"
          },
          {
            "label": "cpToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:34"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:37"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:40"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)18717",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:43"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:46"
          },
          {
            "label": "govToken",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:52"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:55"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IUniswapV2Router02)7437",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)18717": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)7437": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "632bff08239289c26b134bde9903cd0c9c7d97eb54b169d869888e49bf7f3475": {
      "address": "0x2361130282a24421D9fdf2d1072C8edE2a79F108",
      "txHash": "0xad6ec973a2d6e7d16adfe64c0cfbabc00da4de521e0b8994d9e9559462fa8345",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2481",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:108"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:114"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)48_storage",
            "src": "contracts/IdleCDOStorage.sol:130"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2481": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "06d417120603d72bbe5849b26dab0b3da36ff8e0ba67fc308988730685eb7b75": {
      "address": "0x5d4E705315ACa451Db40bf7c067077C768B3FFd0",
      "txHash": "0x1a55c42f82fa4966c7845597213fec4bc42c5fd00048847b74f2da39e880cf97",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2481",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:110"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lossToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "stkIDLEPerUnderlying",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/IdleCDOStorage.sol:136"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2481": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "a4d8a32faa43dbd81ed4b93b03c2ff8606d5830bb8f1e6488fd7c1388accaa88": {
      "address": "0xBe3e788bd11aB3070B5264AeED25c1976ab6AC00",
      "txHash": "0x42082aba9cac4330ed30369f3fc20f50ea5b3a6254cb578e51ecac7892e59e7b",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:31"
          },
          {
            "label": "cpToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:34"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:37"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:40"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)19528",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:43"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:46"
          },
          {
            "label": "govToken",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:52"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:55"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IUniswapV2Router02)7965",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)19528": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)7965": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a141b8310c0116c3a0686b0b0300034d4317b6347b0d4f7b921f86f2213acb5d": {
      "address": "0x7bE5622b27ceb9f2f3776fa5c8e3BA23Db65Ced7",
      "txHash": "0xb3fe7fcacaad614d5e543fed0bebc162dd56c181d86f48d145730a128ba4546a",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:31"
          },
          {
            "label": "cpToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:34"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:37"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:40"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)19528",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:43"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:46"
          },
          {
            "label": "govToken",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:52"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:55"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IUniswapV2Router02)7965",
            "contract": "IdleClearpoolStrategyPolygonZK",
            "src": "contracts/polygon-zk/strategies/clearpool/IdleClearpoolStrategyPolygonZK.sol:58"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)19528": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)7965": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1f374811f9b81b5b4c88b4e48e0c21dbf064e4c69da863e5b61bae09428f8de9": {
      "address": "0x341c6418005feFad6F1e0984B411Ca73D63C8686",
      "txHash": "0x807999cdfea870297778c43d48ff1db7a90841e87ebc62e2a4d89b6738518066",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2481",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:110"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lossToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "stkIDLEPerUnderlying",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/IdleCDOStorage.sol:136"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2481": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    }
  }
}
