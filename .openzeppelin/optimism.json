{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xB5D4D8d9122Bf252B65DAbb64AaD68346405443C",
    "txHash": "0x22f40fdb3bda1f3f84e0c7a8ed38d563810be1b94ad5225b707b8260eeca19a0"
  },
  "proxies": [
    {
      "address": "0x2361130282a24421D9fdf2d1072C8edE2a79F108",
      "txHash": "0x6785865de1cd01ae7c6557cef251f86f623c96c1f93d4886d928aba2276672a5",
      "kind": "transparent"
    },
    {
      "address": "0x957572d61DD16662471c744837d4905bC04Bbaeb",
      "txHash": "0xd26096b6c9cc1e3a8cb46fdbcc8aadc44634fabf639a2cec6e8a79941b593c1b",
      "kind": "transparent"
    },
    {
      "address": "0x8A42DDE5040675C71C09499F63fBa8Ed98fee77B",
      "txHash": "0x3a265ef7b3f7485dcc9b4fa464d941bdc92b4219ca173f2e4caf2a8820e0bebd",
      "kind": "transparent"
    },
    {
      "address": "0x5d4E705315ACa451Db40bf7c067077C768B3FFd0",
      "txHash": "0x9b1c3962463944248209f0f05a6bc170ad6208ffdebd09bb0c2b96875e13adf2",
      "kind": "transparent"
    },
    {
      "address": "0x7bE5622b27ceb9f2f3776fa5c8e3BA23Db65Ced7",
      "txHash": "0x7b71a0bed75a054d5219275cfb45d103264fd7a077c3341e9ed4f824216c1363",
      "kind": "transparent"
    },
    {
      "address": "0xB144eE58679e15f1b25A5F6EfcEBDd0AB8c8BEF5",
      "txHash": "0x002543b3b57e1e4a1da029e3818d28863fa4c70107a857e865be2c6899eaeefd",
      "kind": "transparent"
    },
    {
      "address": "0x98c1E0261Fe4C4c701Cc509Cce2168084944bA4B",
      "txHash": "0xa429fd340cc208caf5f991dc94c639e9c644f85f05427778c74f27e7d0f6463f",
      "kind": "transparent"
    },
    {
      "address": "0x9Ebcb025949FFB5A77ff6cCC142e0De649801697",
      "txHash": "0xf4238bd8a9b18574bf3a3f5b1a4183ca7d9ff7eadd4e67b9b161af42dcf10f45",
      "kind": "transparent"
    },
    {
      "address": "0x2D445eCA81bE26692F88ec33dA583068C48b8197",
      "txHash": "0x4efa8e8b0199d0fa104cb1d75d91083c40c876a695396dff41bc35582e5fc6a8",
      "kind": "transparent"
    },
    {
      "address": "0xFf5a45994a79732B9FEEC1055419290BBa70EeEE",
      "txHash": "0x6403855c2192877be506f1d64a326434d3bfee6c905b1866cee7521e23500459",
      "kind": "transparent"
    },
    {
      "address": "0x6C748E4ea9f15e9c4121b90b5e5689c4deE3a938",
      "txHash": "0xafa669c4f28a235cecafd38ab0f34839cd95fc285c80eb2263e19f356feea5d0",
      "kind": "transparent"
    },
    {
      "address": "0x0581f1F01E05b77612Feaf529da3E048E1424A7E",
      "txHash": "0xac381743b9d6af63e87007204455db7b4504f61a36dd70102bab634a4ef47510",
      "kind": "transparent"
    },
    {
      "address": "0x8186AbBDF9AF3a1fc59A7C5BC34bab66a2e7bEF2",
      "txHash": "0xc11d1bc49a8a3c4680373781acff39b86fad66cacf43081ab385d88457fac386",
      "kind": "transparent"
    },
    {
      "address": "0x7F70Ec0bdc89f0D61e108Afe921311205b4C3431",
      "txHash": "0x3ec60c67bb5162cd2130e62ebe8188e258e03bb643f538b5ddb148a071ff701d",
      "kind": "transparent"
    },
    {
      "address": "0x8C1B4A409098b5326E3103458bdFE23eEEB1Aa5F",
      "txHash": "0x4e06b2da8a174bc4be4f6d8e383fa3f60e5e2aa2856c9ce4f0121efbd72cfe76",
      "kind": "transparent"
    }
  ],
  "impls": {
    "9d44bc00452f8fd12a4342113212e958e769ab88c33e692fcb372bd0baae263f": {
      "address": "0x2A6F03A198d245dAF1fdB330D1D50bCC607Eecab",
      "txHash": "0x0043878dbc8229b4229f70e83e5b637730ff29f4a1230867af1f53cf64a1d91c",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:32"
          },
          {
            "label": "cpToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:35"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:38"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:41"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)19528",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:44"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:47"
          },
          {
            "label": "govToken",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:53"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:56"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IUniswapV2Router02)7965",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)19528": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)7965": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "47d0fe68f572816d260410222847c2af98a6f41be4bebbb7c80909ba8ca232f8": {
      "address": "0x6b8A1e78Ac707F9b0b5eB4f34B02D9af84D2b689",
      "txHash": "0x54ff4ca2a5298ddc49461b52383b6b54fb675c08ad2538852bc20bd1cc40ba1c",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)2481",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isStkAAVEActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:110"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lossToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "stkIDLEPerUnderlying",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/IdleCDOStorage.sol:136"
          }
        ],
        "types": {
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)2481": {
            "label": "contract IUniswapV2Router02"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "50acdb0f6cccb60ae777b17b3270dc4c371677d81bd4497fb891fb31fb2772b6": {
      "address": "0xF66b2055E6dB908f968ea4232d218c8d27e25852",
      "txHash": "0x9f22fade2d05df70e1fe23596ecd8bbdd643f272ec64760936e2e3728d3b55ef",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:32"
          },
          {
            "label": "cpToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:35"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:38"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:41"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)16967",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:44"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:47"
          },
          {
            "label": "govToken",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:53"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:56"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IUniswapV2Router02)7965",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)16967": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)7965": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f6fad037880d7939ec6d75d961b60b6ba570a814f60d56b1823cb67ca28b5e9d": {
      "address": "0xB30F37268Aa74b9b5e96e696562Fe268EE0A69d6",
      "txHash": "0x5f454dffa9836f14392d2d12343b5b572d1ab16c4f377025ddd6ba2e6df462f0",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:32"
          },
          {
            "label": "cpToken",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:35"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:38"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "204",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:41"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(IERC20Detailed)3001",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:44"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "206",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:47"
          },
          {
            "label": "govToken",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:53"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "208",
            "type": "t_uint256",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:56"
          },
          {
            "label": "uniswapRouter",
            "offset": 0,
            "slot": "209",
            "type": "t_contract(IUniswapV2Router02)2279",
            "contract": "IdleClearpoolStrategyOptimism",
            "src": "contracts/optimism/strategies/clearpool/IdleClearpoolStrategyOptimism.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)3001": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_contract(IUniswapV2Router02)2279": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "5f0d1b557d51e78d6e3841863a2243c89ec0ac21853d4737958e9d662acdc58e": {
      "address": "0x36A93ce623ea92c1391e5956C7aCE2accD1A3D3A",
      "txHash": "0x4f02c8385068d73f3d9868554539baa760b51681d7ca88e2c402614c9fdedef1",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:29"
          },
          {
            "label": "rebalancer",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:31"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:33"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:35"
          },
          {
            "label": "maxUnlentPerc",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:37"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:39"
          },
          {
            "label": "allAvailableTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:41"
          },
          {
            "label": "lastAllocations",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:44"
          },
          {
            "label": "protocolWrappers",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_address)",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:46"
          },
          {
            "label": "_minterBlock",
            "offset": 0,
            "slot": "260",
            "type": "t_bytes32",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:48"
          },
          {
            "label": "lastRebalancerAllocations",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:56"
          },
          {
            "label": "lastNAV",
            "offset": 0,
            "slot": "262",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:59"
          },
          {
            "label": "unclaimedFees",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:61"
          },
          {
            "label": "skipRedeemMinAmount",
            "offset": 0,
            "slot": "264",
            "type": "t_bool",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:65"
          },
          {
            "label": "scaleForTolerance",
            "offset": 0,
            "slot": "265",
            "type": "t_uint256",
            "contract": "IdleTokenFungible",
            "src": "contracts/IdleTokenFungible.sol:66"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9bc9d56cbceef4964fb5a243585c15337afae6d931f1cacce32852f72407a987": {
      "address": "0x1B0f494EF778907336bD7E631607db2C8019BF76",
      "txHash": "0xb1439406bdce4f8943345d9cd860bc3539bab691de5195bea67cb4554725cd89",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:31"
          },
          {
            "label": "rebalancer",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:33"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:35"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:37"
          },
          {
            "label": "maxUnlentPerc",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:39"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:41"
          },
          {
            "label": "allAvailableTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:43"
          },
          {
            "label": "lastAllocations",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:46"
          },
          {
            "label": "protocolWrappers",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_address)",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:48"
          },
          {
            "label": "_minterBlock",
            "offset": 0,
            "slot": "260",
            "type": "t_bytes32",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:50"
          },
          {
            "label": "lastRebalancerAllocations",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:58"
          },
          {
            "label": "lastNAV",
            "offset": 0,
            "slot": "262",
            "type": "t_uint256",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:61"
          },
          {
            "label": "unclaimedFees",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:63"
          },
          {
            "label": "skipRedeemMinAmount",
            "offset": 0,
            "slot": "264",
            "type": "t_bool",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:67"
          },
          {
            "label": "scaleForTolerance",
            "offset": 0,
            "slot": "265",
            "type": "t_uint256",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:68"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2d8c5767699dae4b0b0f69365d26c79bd1dac0cc3940bede117bad45dadd2ad0": {
      "address": "0x77F0B2d4A916Bf0aaD0336A8B206B7E7E6f51293",
      "txHash": "0xf14aea9bbc9288b8e744abdbe8f54ba5820273e8b721ab1ea4ddc84e0ea40158",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:31"
          },
          {
            "label": "rebalancer",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:33"
          },
          {
            "label": "feeAddress",
            "offset": 0,
            "slot": "253",
            "type": "t_address",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:35"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "254",
            "type": "t_uint256",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:37"
          },
          {
            "label": "maxUnlentPerc",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:39"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:41"
          },
          {
            "label": "allAvailableTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_array(t_address)dyn_storage",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:43"
          },
          {
            "label": "lastAllocations",
            "offset": 0,
            "slot": "258",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:46"
          },
          {
            "label": "protocolWrappers",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_address)",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:48"
          },
          {
            "label": "_minterBlock",
            "offset": 0,
            "slot": "260",
            "type": "t_bytes32",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:50"
          },
          {
            "label": "lastRebalancerAllocations",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:58"
          },
          {
            "label": "lastNAV",
            "offset": 0,
            "slot": "262",
            "type": "t_uint256",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:61"
          },
          {
            "label": "unclaimedFees",
            "offset": 0,
            "slot": "263",
            "type": "t_uint256",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:63"
          },
          {
            "label": "skipRedeemMinAmount",
            "offset": 0,
            "slot": "264",
            "type": "t_bool",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:67"
          },
          {
            "label": "scaleForTolerance",
            "offset": 0,
            "slot": "265",
            "type": "t_uint256",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:68"
          },
          {
            "label": "redeemWithQueue",
            "offset": 0,
            "slot": "266",
            "type": "t_bool",
            "contract": "IdleTokenFungibleOptimism",
            "src": "contracts/optimism/IdleTokenFungibleOptimism.sol:69"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "49029b2a4a5517a068c77789b209159ef326097ea5c6f8ff59f9b14af54da7f9": {
      "address": "0x0f5042B3B9b20b3563279e841c14977636C53e00",
      "txHash": "0x076ebf6b3d9cc2652c036d89c5167c19401fc9ee770863e98aa9060042e55630",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:31"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:33"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:35"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IERC20Detailed)19790",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:37"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:39"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:43"
          },
          {
            "label": "borrower",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:45"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:47"
          },
          {
            "label": "withdrawsRequests",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:49"
          },
          {
            "label": "instantWithdrawsRequests",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:51"
          },
          {
            "label": "pendingWithdraws",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:53"
          },
          {
            "label": "pendingInstantWithdraws",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:55"
          },
          {
            "label": "totEpochDeposits",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)19790": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e875e967fdf871f010fb03cb43e58cc68035cb0c9d5d2c5c561713b0b5767347": {
      "address": "0xCc5eEd58a681956F0F9188d447004f3Fef0eD3eE",
      "txHash": "0x9116bdc911fa0faa25926251283ed78edd874024b5fe344e24ee2426d433f854",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)3118",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "directDeposit",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:110"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lossToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "stkIDLEPerUnderlying",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/IdleCDOStorage.sol:136"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "isEpochRunning",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:28"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "allowAAWithdrawRequest",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:30"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "allowBBWithdrawRequest",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:32"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "epochDuration",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:34"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "instantWithdrawDelay",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:36"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "expectedEpochInterest",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:38"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "epochEndDate",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:40"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "instantWithdrawDeadline",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:42"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "lastEpochApr",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:44"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "instantWithdrawAprDelta",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:46"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "pendingWithdrawFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:48"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "lastEpochInterest",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:50"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "allowInstantWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:52"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "disableInstantWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:54"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "defaulted",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:56"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "keyring",
            "type": "t_address",
            "src": "contracts/IdleCDOEpochVariant.sol:58"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "keyringPolicyId",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:60"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)3118": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "a2cc3b731cf171cdbe3d8554a39bf5c558b1aea4d0b7b4779f7c8a93235d518a": {
      "address": "0xe5E784569193e640c0B03f057e913CD17BE93294",
      "txHash": "0x8a175e911770ccd7faf4778c07e6246e26af0cb059ecfce48ca9c8e3eb4a0d28",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:31"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:33"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:35"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IERC20Detailed)2300",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:37"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:39"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:43"
          },
          {
            "label": "borrower",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:45"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:47"
          },
          {
            "label": "withdrawsRequests",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:49"
          },
          {
            "label": "instantWithdrawsRequests",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:51"
          },
          {
            "label": "pendingWithdraws",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:53"
          },
          {
            "label": "pendingInstantWithdraws",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:55"
          },
          {
            "label": "totEpochDeposits",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:57"
          },
          {
            "label": "canTransfer",
            "offset": 0,
            "slot": "214",
            "type": "t_bool",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)2300": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "63199b81e78a518e5aa11314182be5b76aa7566bde88b5e733bfaf0efe470b0a": {
      "address": "0x5c9ACa3ce6deC45d21041ED9964c7242Ecd85A83",
      "txHash": "0xa4c36f1153a0bec00f630cf522d6ab8bca810fd4a69f092b42915bb3e8321e97",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)3118",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "directDeposit",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:110"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lossToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "stkIDLEPerUnderlying",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/IdleCDOStorage.sol:136"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "isEpochRunning",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:28"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "allowAAWithdrawRequest",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:30"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "allowBBWithdrawRequest",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:32"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "epochDuration",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:34"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "instantWithdrawDelay",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:36"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "expectedEpochInterest",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:38"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "epochEndDate",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:40"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "instantWithdrawDeadline",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:42"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "lastEpochApr",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:44"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "instantWithdrawAprDelta",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:46"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "pendingWithdrawFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:48"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "lastEpochInterest",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:50"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "allowInstantWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:52"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "disableInstantWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:54"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "defaulted",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:56"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "keyring",
            "type": "t_address",
            "src": "contracts/IdleCDOEpochVariant.sol:58"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "keyringPolicyId",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:60"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)3118": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "65db4cca517b9c685f5f1126475b04085d19a0108603b59c8b386c5d8f65d472": {
      "address": "0x3A799219C20C8fA21EAf902B0834b09BcB33722E",
      "txHash": "0xc294cd3d741d1b2947d07103628a33eeee56a304799025e61b7cac63d96a772f",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:31"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:33"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:35"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IERC20Detailed)8741",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:37"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:39"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:43"
          },
          {
            "label": "borrower",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:45"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:47"
          },
          {
            "label": "withdrawsRequests",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:49"
          },
          {
            "label": "instantWithdrawsRequests",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:51"
          },
          {
            "label": "pendingWithdraws",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:53"
          },
          {
            "label": "pendingInstantWithdraws",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:55"
          },
          {
            "label": "totEpochDeposits",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:57"
          },
          {
            "label": "canTransfer",
            "offset": 0,
            "slot": "214",
            "type": "t_bool",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:59"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)8741": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c020a198986e66032c770d864bf6def2a0fdb7d3360ba7452abf00a525059aea": {
      "address": "0x2c42Fdcd742cD4bB058554C1d537E5af667497A1",
      "txHash": "0x2822c690f8a428e9eff6cadf84477e61f56b1d061d83415f582c1783dc149b93",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)3118",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "directDeposit",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:110"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lossToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "stkIDLEPerUnderlying",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/IdleCDOStorage.sol:136"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "isEpochRunning",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:28"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "allowAAWithdrawRequest",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:30"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "allowBBWithdrawRequest",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:32"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "epochDuration",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:34"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "instantWithdrawDelay",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:36"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "expectedEpochInterest",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:38"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "epochEndDate",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:40"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "instantWithdrawDeadline",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:42"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "lastEpochApr",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:44"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "instantWithdrawAprDelta",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:46"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "pendingWithdrawFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:48"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "lastEpochInterest",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:50"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "allowInstantWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:52"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "disableInstantWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:54"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "defaulted",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:56"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "keyring",
            "type": "t_address",
            "src": "contracts/IdleCDOEpochVariant.sol:58"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "keyringPolicyId",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:60"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "bufferPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:62"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)3118": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "75f72a890ec50bfa3a465ab6c8e0c85d0c9ef1f70a199fed5664bb50746ac9d8": {
      "address": "0x427Eb8f4d2d423DBA737C48bB79776204a84ad65",
      "txHash": "0x8ab262db6de42cad0f7fa98be51d9f35467fdcfdc652fc6461984ec791a9a943",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_uint8",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "limit",
            "type": "t_uint256",
            "src": "contracts/GuardedLaunchUpgradable.sol:23"
          },
          {
            "contract": "GuardedLaunchUpgradable",
            "label": "governanceRecoveryFund",
            "type": "t_address",
            "src": "contracts/GuardedLaunchUpgradable.sol:25"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "_lastCallerBlock",
            "type": "t_bytes32",
            "src": "contracts/IdleCDOStorage.sol:14"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "latestHarvestBlock",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:16"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "weth",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:18"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "incentiveTokens",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/IdleCDOStorage.sol:20"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "token",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:22"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "guardian",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:24"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "oneToken",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:26"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "rebalancer",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:28"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "uniswapRouterV2",
            "type": "t_contract(IUniswapV2Router02)3118",
            "src": "contracts/IdleCDOStorage.sol:30"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowAAWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:33"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "allowBBWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:35"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "revertIfTooLow",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:38"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "skipDefaultCheck",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:40"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategy",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:43"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "strategyToken",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:45"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AATranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:47"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBTranche",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:49"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "AAStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:51"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "BBStaking",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:53"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheAPRSplitRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:57"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "trancheIdealWeightRatio",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:60"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:62"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "priceBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:64"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVAA",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:66"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastNAVBB",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:68"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lastStrategyPrice",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:70"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unclaimedFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:72"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "unlentPerc",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:74"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "fee",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:77"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeReceiver",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:79"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "idealRange",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:82"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "releaseBlocksPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:84"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "harvestedRewards",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:86"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "directDeposit",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:92"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "referral",
            "type": "t_address",
            "src": "contracts/IdleCDOStorage.sol:94"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "feeSplit",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:96"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "isAYSActive",
            "type": "t_bool",
            "src": "contracts/IdleCDOStorage.sol:99"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "liquidationTolerance",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:110"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "minAprSplitAYS",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:116"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "maxDecreaseDefault",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:118"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "lossToleranceBps",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:120"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "stkIDLEPerUnderlying",
            "type": "t_uint256",
            "src": "contracts/IdleCDOStorage.sol:122"
          },
          {
            "contract": "IdleCDOStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "contracts/IdleCDOStorage.sol:136"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "isEpochRunning",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:28"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "allowAAWithdrawRequest",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:30"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "allowBBWithdrawRequest",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:32"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "epochDuration",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:34"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "instantWithdrawDelay",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:36"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "expectedEpochInterest",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:38"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "epochEndDate",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:40"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "instantWithdrawDeadline",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:42"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "lastEpochApr",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:44"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "instantWithdrawAprDelta",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:46"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "pendingWithdrawFees",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:48"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "lastEpochInterest",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:50"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "allowInstantWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:52"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "disableInstantWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:54"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "defaulted",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:56"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "keyring",
            "type": "t_address",
            "src": "contracts/IdleCDOEpochVariant.sol:58"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "keyringPolicyId",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:60"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "bufferPeriod",
            "type": "t_uint256",
            "src": "contracts/IdleCDOEpochVariant.sol:62"
          },
          {
            "contract": "IdleCDOEpochVariant",
            "label": "keyringAllowWithdraw",
            "type": "t_bool",
            "src": "contracts/IdleCDOEpochVariant.sol:64"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IUniswapV2Router02)3118": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint8": {
            "label": "uint8"
          }
        }
      }
    },
    "5462d9c63985776931786951073979d172f044510f36224f1e57c1c8b900ae0e": {
      "address": "0xb3Cbb93Eb1c0ed51804F4A797397D09859085bf1",
      "txHash": "0xc65e5ed4235a90da6e999c2c58992c3281b3ff090b47e1d15631fa53a20818ae",
      "layout": {
        "solcVersion": "0.8.10",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "104",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "105",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "token",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:29"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "202",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:31"
          },
          {
            "label": "oneToken",
            "offset": 0,
            "slot": "203",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:33"
          },
          {
            "label": "underlyingToken",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(IERC20Detailed)8335",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:35"
          },
          {
            "label": "idleCDO",
            "offset": 0,
            "slot": "205",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:37"
          },
          {
            "label": "lastApr",
            "offset": 0,
            "slot": "206",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:41"
          },
          {
            "label": "borrower",
            "offset": 0,
            "slot": "207",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:43"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "208",
            "type": "t_address",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:45"
          },
          {
            "label": "withdrawsRequests",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:47"
          },
          {
            "label": "instantWithdrawsRequests",
            "offset": 0,
            "slot": "210",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:49"
          },
          {
            "label": "pendingWithdraws",
            "offset": 0,
            "slot": "211",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:51"
          },
          {
            "label": "pendingInstantWithdraws",
            "offset": 0,
            "slot": "212",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:53"
          },
          {
            "label": "totEpochDeposits",
            "offset": 0,
            "slot": "213",
            "type": "t_uint256",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:55"
          },
          {
            "label": "canTransfer",
            "offset": 0,
            "slot": "214",
            "type": "t_bool",
            "contract": "IdleCreditVault",
            "src": "contracts/strategies/idle/IdleCreditVault.sol:57"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IERC20Detailed)8335": {
            "label": "contract IERC20Detailed",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
